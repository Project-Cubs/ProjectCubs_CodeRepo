{"version":3,"sources":["components/Router/ProtectedRoutes.js","components/Navbar/Navbar.js","pages/Dictionary/components/Word.js","pages/Dictionary/components/WordList.js","utils/Firebase/Firebase.js","utils/Firebase/Users/users.example.js","utils/Firebase/Users/users.firebase.js","utils/Firebase/Score/score.firebase.js","pages/Dictionary/components/WordQuiz.js","utils/Dictionary/searchDictionary.js","pages/Dictionary/components/Search.js","utils/Firebase/Bookmark/bookmark.firebase.js","pages/Dictionary/Dictionary.js","components/Cards/Cards.js","utils/Firebase/Songs/songs.firebase.js","pages/Learn/Learn.js","pages/Home/components/Dashboard/components/ChartCard/ChartCard.js","pages/Home/components/Dashboard/components/RecentSongs/RecentSongs.js","pages/Home/components/Dashboard/components/RecentWords/RecentWords.js","pages/Home/components/Dashboard/Dashboard.js","pages/Home/Home.js","pages/Login/components/LoginForm.js","pages/Login/Login.js","pages/Register/components/RegisterForm.js","pages/Register/Register.js","pages/Scoreboard/Scoreboard.js","components/Buttons/BackButton.js","pages/Learn/LyricPlayer/components/Lyrics.js","pages/Learn/LyricPlayer/components/Player.js","pages/Learn/LyricPlayer/components/Scoreboard.js","pages/Learn/LyricPlayer/components/Definition.js","utils/Firebase/RecentSongs/recentSongs.firebase.js","pages/Learn/LyricPlayer/LyricPlayer.js","App.js","index.js"],"names":["ProtectedRoutes","user","JSON","parse","localStorage","getItem","_jsx","Outlet","context","Navigate","to","Navbar","navigate","useNavigate","_jsxs","className","children","NavLink","onClick","removeItem","Word","_ref","word","onAddWord","koreanWord","koreanDefinition","englishWord","englishDefinition","utterance","SpeechSynthesisUtterance","text","lang","pitch","rate","volume","window","speechSynthesis","speak","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","WordList","words","onStartQuiz","map","index","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","auth","getAuth","database","getDatabase","createUser","email","firstName","lastName","highScore","song","quiz","bookmark","registerUser","_x","_registerUser","apply","arguments","password","response","db_ref","createUserWithEmailAndPassword","ref","concat","currentUser","uid","set","signInUser","_x2","_signInUser","_callee2","_ref2","_context2","signInWithEmailAndPassword","then","userCredential","setItem","stringify","catch","error","getUser","_getUser","_callee3","dbRef","_context3","get","val","updateUser","_x3","_updateUser","_callee4","data","_context4","update","setSongScore","_setSongScore","newScore","currentScore","setQuizScore","_setQuizScore","WordQuiz","_useState","useState","_useState2","_slicedToArray","numCorrect","setNumCorrect","_useState3","_useState4","currentWordIndex","setCurrentWordIndex","_useState5","_useState6","options","setOptions","shuffle","array","i","length","j","Math","floor","random","_handleClicked","selected","currentAnswer","newCorrect","score","alert","useEffect","currentWord","shuffledOtherWords","filter","_","slice","_toConsumableArray","handleClicked","searchDictionary","_json$channel$item","_json$channel$item$0$","q","json","wordObj","_wordObj$translation","_wordObj$translation2","fetch","parseStringPromise","console","log","channel","item","sense","definition","translation","trans_word","trans_dfn","Search","onSearchWord","setWord","handleClick","event","dictionaryResult","preventDefault","t0","type","onChange","target","value","defaultValue","_ref3","e","addBookmark","_addBookmark","getBookmark","_getBookmark","Dictionary","currentPage","setCurrentPage","searchedWord","setSearchedWord","addedWords","setAddedWords","_useState7","_useState8","direct","isDirect","getBookmarkedWords","directNav","number","bookmarks","gotoNextPage","handleAddWord","t1","Link","FontAwesomeIcon","icon","style","color","_Fragment","RecentWordCard","RecentSongCard","album_url","title","artist","src","alt","SongCard","_song","_objectSpread","state","_downloadSongs","Learn","songs","setSongs","downloadSongs","s","ChartCard","scoreSet","name","goal","colors","PieChart","width","height","cy","id","Pie","dataKey","outerRadius","innerRadius","label","entry","Cell","fill","Label","position","fontSize","RecentSongs","recentSongs","RecentWords","recentWords","Dashboard","setFirstName","setRecentWords","setRecentSongs","onAuthStateChanged","dbUser","Home","LoginForm","setEmail","setPassword","setError","handleLogin","errorCode","errorMessage","code","message","Login","RegisterForm","values","setValues","handleChange","_defineProperty","handleSignUp","Register","Scoreboard","scores","setScores","onValue","snapshot","users","Object","highestScores","songScore","quizScore","getHighestScore","sort","a","b","BackButton","Lyrics","lyrics","currentLineIndex","setPopupInfo","getKoreanDefinition","info","stopPropagation","generateLyric","sentence","split","koreanWords","match","extractKoreanWords","includes","note","line","Player","music_url","audioRef","handleTimeUpdate","handleAudioEnd","backgroundImage","muted","controls","autoPlay","onTimeUpdate","onEnded","scoreState","_scoreState","setScore","current","currentTime","play","Definition","popupInfo","getRecentSongs","_getRecentSongs","addRecentSong","_addRecentSong","shift","push","LyricPlayer","_location$state","useLocation","setCurrentLineIndex","contentRef","useRef","scrollToHighlightedLine","highlightedElement","document","querySelector","highlightedHeight","offsetHeight","contentHeight","scrollValue","offsetTop","scrollTop","time","prevIndex","past","randomScore","addEventListener","removeEventListener","library","add","fas","App","BrowserRouter","basename","Routes","Route","element","path","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.53e84af8.chunk.js","sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\";\n\nconst ProtectedRoutes = function () {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return user ? <Outlet context={[user]} /> : <Navigate to={\"/login\"} />;\n};\n\nexport default ProtectedRoutes;\n","import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nexport const Navbar = function () {\n  const navigate = useNavigate()\n  return (\n    <div className=\"navBar\">\n      <nav>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          <h1>My K Star</h1>\n        </NavLink>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          {\" \"}\n          Home{\" \"}\n        </NavLink>\n        <NavLink to={\"/scoreboard\"} className={\"Links\"}>\n          {\" \"}\n          Scoreboard{\" \"}\n        </NavLink>\n        <NavLink to={\"/dictionary\"} className={\"Links\"}>\n          {\" \"}\n          Dictionary{\" \"}\n        </NavLink>\n        <NavLink to={\"/learn\"} className={\"Links\"}>\n          {\" \"}\n          Learn{\" \"}\n        </NavLink>\n        <button onClick={function () {\n          localStorage.removeItem(\"user\");\n          navigate(\"/login\")\n        }}>Logout</button>\n      </nav>\n      <hr className=\"navbar-divider\" />\n    </div>\n  );\n};\n","\nimport React from \"react\";\nimport \"../Dictionary.css\";\n\nconst Word = ({ word, onAddWord }) => {\n  const { koreanWord, koreanDefinition, englishWord, englishDefinition } = word;\n\n  const speak = () => {\n    const utterance = new SpeechSynthesisUtterance();\n    utterance.text = koreanWord;\n    utterance.lang = 'ko-KR';\n    utterance.pitch = 1;\n    utterance.rate = 0.75;\n    utterance.volume = 1;\n    window.speechSynthesis.speak(utterance);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <button className=\"button\" onClick={speak}> 🔊 </button>\n        <h1 className=\"h1\">{koreanWord}</h1>\n        <button className=\"button\" onClick={async () => await onAddWord(word)}> ⭐️ </button>\n      </div>\n\n      <section>\n        <aside className=\"wordcard\">\n          <h3>{englishWord} </h3>\n          <p>{koreanDefinition}</p>\n          <p>{englishDefinition}</p>\n        </aside>\n      </section>\n    </div>\n  );\n};\n\nexport default Word;\n","import React from \"react\";\nimport \"../Dictionary.css\";\nconst WordList = ({ words, onStartQuiz }) => {\n\n  return (\n    <header>\n      <h1 className=\"wordList\">Bookmark</h1>\n      <section className=\"word-list\">\n        {words.map((word, index) => {\n\n          const { koreanWord, koreanDefinition, englishWord } = word;\n\n          return (\n            <aside className=\"wordcard\" key={index}>\n              <h2> {koreanWord} </h2>\n              <h3> {englishWord} </h3>\n              <p> {koreanDefinition} </p>\n            </aside>\n          )\n        })}\n      </section>\n      <button onClick={onStartQuiz}>Start Quiz</button>\n    </header>\n  );\n};\n\nexport default WordList;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const database = getDatabase(app);\n","// USER SCHEMA\n// const user = {\n//     email: \"test@gmail.com\",\n//     firstName: \"Test\",\n//     lastName: \"User\",\n//     highScore: {\n//         song: 0,\n//         quiz: 0\n//     },\n//     bookmark: []\n// }\n\nexport const createUser = ({\n    email,\n    firstName,\n    lastName,\n}) => {\n    return {\n        email,\n        firstName,\n        lastName,\n        highScore: {\n            song: 0,\n            quiz: 0\n        },\n        bookmark: []\n    }\n}","\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { get, ref, set, update } from \"firebase/database\";\nimport { auth, database } from \"../Firebase\";\nimport { createUser } from \"./users.example\";\n\nexport async function registerUser({ email, password, firstName, lastName }) {\n    const response = await createUserWithEmailAndPassword(auth, email, password);\n    const db_ref = ref(database, `/users/${auth.currentUser.uid}`);\n    await set(db_ref, createUser({ email, firstName, lastName }))\n    return response;\n}\n\nexport async function signInUser({ email, password }) {\n    await signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            const user = userCredential.user;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return user;\n        })\n        .catch((error) => {\n            throw error;\n        });\n}\n\n// get currently logged in user\nexport async function getUser() {\n    const uid = auth.currentUser.uid\n    const dbRef = ref(database, `/users/${uid}`)\n    return (await get(dbRef)).val()\n}\n\n// update user data with new data\nexport async function updateUser(data) {\n    const uid = auth.currentUser.uid\n    const dbRef = ref(database, `/users/${uid}`)\n    await update(dbRef, data)\n}","// setSongScore(newScore)\n\nimport { getUser, updateUser } from \"../Users/users.firebase\";\n\n// 1. get the currently logged in user info\n// 2. get the user's current highScore for song\n// 3. if newScore > current highScore => update the user's highscore\n\nexport async function setSongScore(newScore) {\n\n    \n    // get the currently logged in user info\n    const user = await getUser();\n    // READ ONLY\n    let currentScore = user.highScore.song;\n\n    if (newScore > currentScore) {\n        // update the highScore on the database\n        await updateUser({\n            highScore: {\n                song: newScore,\n                quiz: user.highScore.quiz\n            }\n        })\n    }\n}\n\n// setQuizScore(newScore)\n\n// 1. get the currently logged in user info\n// 2. get the user's current highScore for quiz\n// 3. if newScore > current highScore => update the user's highscore\n\nexport async function setQuizScore(newScore) {\n    // get the currently logged in user info\n    const user = await getUser();\n    // READ ONLY\n    let currentScore = user.highScore.quiz;\n\n    if (newScore > currentScore) {\n        // update the highScore on the database\n        await updateUser({\n            highScore: {\n                song: user.highScore.song,\n                quiz: newScore\n            }\n        })\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { setQuizScore } from \"../../../utils/Firebase/Score/score.firebase\";\nimport \"../Dictionary.css\";\n\nfunction WordQuiz({ words }) {\n\n    const [numCorrect, setNumCorrect] = useState(0);\n    const [currentWordIndex, setCurrentWordIndex] = useState(0);\n    const [options, setOptions] = useState([]);\n\n    useEffect(\n        () => {\n            const currentWord = words[currentWordIndex];\n            const otherWords = words.filter((_, index) => {\n                return index !== currentWordIndex;\n            })\n            const shuffledOtherWords = shuffle(otherWords).slice(0, 3);\n            setOptions(shuffle([...shuffledOtherWords, currentWord]));\n        },\n        [currentWordIndex, words]\n    )\n\n    function shuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]]\n        }\n        return array;\n    }\n\n    async function handleClicked(selected) {\n        const currentAnswer = words[currentWordIndex].englishWord;\n        let newCorrect = numCorrect;\n        if (selected === currentAnswer) {\n            newCorrect++;\n            setNumCorrect(newCorrect);\n        }\n        if (currentWordIndex === words.length - 1) {\n            const score = newCorrect / words.length * 100;\n            alert(`Your score is : ${score}`);\n            await setQuizScore(score);\n            setNumCorrect(0);\n            setCurrentWordIndex(0);\n        } else {\n            setCurrentWordIndex(currentWordIndex + 1);\n        }\n    }\n\n    return (\n        <header>\n            <h1> {words[currentWordIndex].koreanWord} </h1>\n            <h3> Correct: {numCorrect} </h3>\n            <div className=\"options_container\">\n                {\n                    options.map((word, i) => {\n                        return (\n                            <button className=\"option_button\" key={i} onClick={() => handleClicked(word.englishWord)}>\n                                {word.englishWord}\n                            </button>\n                        )\n                    })\n                }\n            </div>\n        </header>\n    );\n}\n\nexport default WordQuiz;\n","import { parseStringPromise } from \"xml2js\";\n\nexport const searchDictionary = async (word) => {\n    const url = process.env.REACT_APP_DICT_URL;\n    const key = process.env.REACT_APP_DICT_KEY;\n    const q = word;\n    const translated = \"y\";\n    const trans_lang = \"1\";\n    const response = await fetch(`${url}?key=${key}&q=${q}&translated=${translated}&trans_lang=${trans_lang}`);\n    const text = await response.text();\n    const json = await parseStringPromise(text);\n    console.log(\"Dictionary result: \", json);\n    const wordObj = json.channel.item?.[0].sense?.[0];\n    if (!wordObj) {\n        return null;\n    } else {\n        const koreanWord = word;\n        const koreanDefinition = wordObj.definition[0];\n        const englishWord = wordObj.translation?.[0].trans_word[0];\n        const englishDefinition = wordObj.translation?.[0].trans_dfn[0];\n\n        return { koreanWord, koreanDefinition, englishWord, englishDefinition }\n    }\n};","import { useState } from \"react\";\nimport { searchDictionary } from \"../../../utils/Dictionary/searchDictionary\";\n\nconst Search = ({ onSearchWord }) => {\n\n    const [word, setWord] = useState(\"\");\n\n    const handleClick = async (event) => {\n        event.preventDefault();\n        try {\n            const dictionaryResult = await searchDictionary(word);\n            if (dictionaryResult) {\n                onSearchWord(dictionaryResult);\n            } else {\n                alert(\"No word found\");\n            }\n        } catch (error) {\n            alert(\"Incorrect search. Please try again.\");\n        }\n    }\n\n    return (\n        <header>\n            <blockquote>\n                <h1>\n                    My K Star Dictionary\n                </h1>\n                <footer>\n                    <h2>\n                        Find meanings and save for quick reference\n                    </h2>\n                </footer>\n            </blockquote>\n            <section>\n                <form className=\"bookmark-form\">\n                    <input\n                        type=\"text\"\n                        onChange={(event) => {\n                            setWord(event.target.value);\n                        }}\n                        defaultValue={word}\n                    />\n                    <button onClick={async (e) => await handleClick(e)} type=\"submit\" className=\"Search\">\n                        Search\n                    </button>\n                </form>\n            </section>\n        </header>\n    )\n}\n\nexport default Search;","import { getUser, updateUser } from \"../Users/users.firebase\";\n\nexport async function addBookmark(word) {\n    // Get user's bookmark\n    const bookmark = await getBookmark() || [];\n    for (let i = 0; i < bookmark.length; i++) {\n        if (bookmark[i].koreanWord === word.koreanWord) {\n            alert(\"Already bookmarked\");\n            return;\n        }\n    }\n\n    await updateUser({\n        bookmark: [...bookmark, word]\n    })\n}\n\nexport async function getBookmark() {\n    // Get user's bookmark\n    const user = await getUser();\n    // ADD CODE HERE\n    return user.bookmark;\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport Word from \"./components/Word\";\nimport WordList from \"./components/WordList\";\nimport WordQuiz from \"./components/WordQuiz\";\nimport Search from \"./components/Search\";\nimport { addBookmark, getBookmark } from \"../../utils/Firebase/Bookmark/bookmark.firebase\";\nimport { getUser } from \"../../utils/Firebase/Users/users.firebase\";\n\nexport function Dictionary() {\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [searchedWord, setSearchedWord] = useState();\n    const [addedWords, setAddedWords] = useState([]);\n    const [direct, isDirect] = useState(false);\n\n    const getBookmarkedWords = async () => {\n        const user = await getUser();\n        return user.bookmark;\n    }\n\n    const directNav = async (number) => {\n        const bookmarks = await getBookmarkedWords();\n        setCurrentPage(number);\n        setAddedWords(bookmarks);\n        isDirect(true);\n    }\n\n    const gotoNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n\n    const gotoPreviousPage = () => {\n        setCurrentPage(currentPage - 1);\n    };\n\n    const backToDefault = () => {\n        setCurrentPage(0);\n        isDirect(false);\n    };\n\n    const handleSearchWord = (word) => {\n        setSearchedWord(word);\n        gotoNextPage();\n    };\n\n    const handleAddWord = async (word) => {\n        await addBookmark(word);\n        setAddedWords(await getBookmark());\n        gotoNextPage();\n    };\n\n    const handleStartQuiz = () => {\n        gotoNextPage();\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"loggedIn\">\n                {currentPage !== 0 && direct && (<Link onClick={backToDefault} className=\"Links backButton\">\n                    <FontAwesomeIcon\n                        icon=\"fa-solid fa-arrow-left\"\n                        style={{ color: '#ffffff' }}\n                        className=\"icons\"\n                    />\n                </Link>)}\n                {currentPage !== 0 && !direct && (<Link onClick={gotoPreviousPage} className=\"Links backButton\">\n                    <FontAwesomeIcon\n                        icon=\"fa-solid fa-arrow-left\"\n                        style={{ color: '#ffffff' }}\n                        className=\"icons\"\n                    />\n                </Link>)}\n                {currentPage === 0 && (\n                    <>\n                        <Search onSearchWord={handleSearchWord} />\n                        <button onClick={() => { directNav(2) }} className=\"directNavButton\">See Word List</button>\n                    </>\n                )}\n                {currentPage === 1 && (\n                    <Word word={searchedWord} onAddWord={handleAddWord} />\n                )}\n                {currentPage === 2 && (\n                    <WordList words={addedWords} onStartQuiz={handleStartQuiz} />\n                )}\n                {currentPage === 3 && (\n                    <WordQuiz words={addedWords} />\n                )}\n            </div>\n        </div>\n    );\n}\n\n/*direct ? (currentPage !== 0 && (<Link onClick={backToDefault()} className=\"Links backButton\"><FontAwesomeIcon\n                    icon=\"fa-solid fa-arrow-left\"\n                    style={{ color: '#ffffff' }}\n                    className=\"icons\"\n                /></Link>)) : (currentPage !== 0 && <Link onClick={gotoPreviousPage} className=\"Links backButton\">\n                    <FontAwesomeIcon\n                        icon=\"fa-solid fa-arrow-left\"\n                        style={{ color: '#ffffff' }}\n                        className=\"icons\"\n                    />\n    </Link>)*/","import { useNavigate } from 'react-router-dom';\n\nexport const RecentWordCard = ({ koreanWord, englishWord }) => {\n    return (\n        <div className=\"word-card\">\n            <p>{koreanWord}</p>\n            <p>{englishWord}</p>\n        </div>\n    );\n};\n\nexport const RecentSongCard = ({ album_url, title, artist }) => {\n    return (\n        <div className=\"song-card\">\n            <img src={album_url} alt=\"Album Cover\" />\n            <h3>{title}</h3>\n            <p>{artist}</p>\n        </div>\n    );\n};\n\nexport const SongCard = ({ song }) => {\n    const { album_url, artist, title } = { ...song };\n    const navigate = useNavigate();\n    return (\n        <aside>\n            <h3> {title} </h3>\n            <figure>\n                <img src={album_url} alt='album' />\n                <figcaption>\n                    <i> Artist: {artist} </i>\n                </figcaption>\n            </figure>\n            <button onClick={() => {\n                navigate(\"/lyric-player\", { state: { song } })\n            }}>\n                Sing!\n            </button>\n        </aside>\n    );\n}","import { get, ref, set } from \"firebase/database\";\nimport { database } from \"../Firebase\";\nimport { songs } from \"./songs.example\";\n\nexport async function uploadSongs () {\n    const dbRef = ref(database, \"/songs\");\n    set(dbRef, songs)\n}\n\nexport async function downloadSongs () {\n    const dbRef = ref(database, \"/songs\");\n    return (await get(dbRef)).val()\n}\n","import { useEffect, useState } from \"react\";\nimport { SongCard } from \"../../components/Cards/Cards\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport { downloadSongs } from \"../../utils/Firebase/Songs/songs.firebase\";\n\nexport function Learn() {\n\n    const [songs, setSongs] = useState([]);\n\n    useEffect(() => {\n        downloadSongs().then(s => setSongs(s))\n    }, [])\n\n    return (\n        <div>\n            <Navbar></Navbar>\n            <main className=\"loggedIn\">\n                <h1> Learn </h1>\n                <section>\n                    {songs.map((song, i) => {\n                        return (<SongCard key={i} song={song} />)\n                    })}\n                </section>\n            </main>\n        </div>\n    )\n}\n\n","import { PieChart, Pie, Cell, Label } from \"recharts\";\nimport \"../../dashboard.css\";\n\nexport default function ChartCard() {\n  const goal = 40;\n  const currentScore = 32;\n  const scoreSet = [\n    { name: 'Current', score: currentScore },\n    { name: 'Goal', score: goal - currentScore }\n  ]\n\n  const colors = [\n    \"rgb(25.5,127.5,93.5)\",\n    \"rgb(255, 190,51)\"\n  ];\n\n  return (\n    <div>\n      <h2 className=\"h1\">Weekly Goals</h2>\n      <br /><br />\n      <div className=\"chartCard\">\n        <span className=\"tab\" />\n        <PieChart width={450} height={300} cy=\"20%\" id=\"piechart\">\n          <Pie data={scoreSet} dataKey={\"score\"} outerRadius={150} innerRadius={75} label>\n            {\n              scoreSet.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={colors[index]} />\n              ))\n            }\n            <Label value={currentScore / goal * 100 + \"%\"} position={\"center\"} fontSize=\"50px\" />\n          </Pie>\n        </PieChart>\n        <><h3 className=\"h3\">Current: {currentScore}<br /><br />Goal: {goal}</h3></>\n      </div>\n    </div>\n  )\n}","import { RecentSongCard } from \"../../../../../../components/Cards/Cards\";\nimport { Link } from \"react-router-dom\";\nimport \"../../dashboard.css\";\n\nexport default function RecentSongs({recentSongs}) {\n  \n  return (\n    <div className=\"recent-songs\">\n      <h2>\n        Recent Songs\n        <Link to={\"/learn\"}>View All</Link>\n      </h2>\n      {recentSongs.map((song, index) => (\n        <RecentSongCard key={index} {...song} />\n      ))}\n    </div>\n  )\n}","import { useState, useEffect } from \"react\";\nimport { auth } from \"../../../../../../utils/Firebase/Firebase\";\nimport { getUser } from \"../../../../../../utils/Firebase/Users/users.firebase\";\nimport { Link } from \"react-router-dom\";\nimport { RecentWordCard } from \"../../../../../../components/Cards/Cards\";\nimport \"../../dashboard.css\";\n\nexport default function RecentWords({recentWords}) {\n\n  return (\n    <div className=\"recent-words\">\n      <h2>\n        Recent Words\n        <Link to={\"/dictionary\"}>View All</Link>\n      </h2>\n      {recentWords.map((word, index) => (\n        <RecentWordCard key={index} {...word} />\n      ))}\n    </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport ChartCard from \"./components/ChartCard/ChartCard\";\nimport RecentSongs from \"./components/RecentSongs/RecentSongs\";\nimport RecentWords from \"./components/RecentWords/RecentWords\"\nimport { getUser } from \"../../../../utils/Firebase/Users/users.firebase\";\nimport { auth } from \"../../../../utils/Firebase/Firebase\";\nimport \"./dashboard.css\";\n\nexport default function Dashboard() {\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [recentWords, setRecentWords] = useState([])\n  const [recentSongs, setRecentSongs] = useState([])\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const dbUser = await getUser();\n        console.log(dbUser);\n        const bookmark = dbUser.bookmark || [];\n        setRecentWords(bookmark.length > 3 ? bookmark.slice(-3) : bookmark);\n        setRecentSongs(dbUser.recentSongs || []);\n        setFirstName(dbUser.firstName);\n      }\n    })\n  }, [])\n\n  return (\n    <div className=\"dashboard\">\n      <h2 className=\"h2\">Welcome Back</h2>\n      <h1 className=\"h1\">{firstName}</h1>\n      <section className=\"content-section\">\n        <ChartCard />\n        <RecentSongs recentSongs={recentSongs} />\n        <RecentWords recentWords={recentWords} />\n      </section>\n    </div>\n  )\n}","\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nexport function Home() {\n  return (\n    <div>\n      <Navbar />\n      <main className=\"loggedIn\">\n        <Dashboard />\n      </main>\n    </div>\n  );\n};","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signInUser } from \"../../../utils/Firebase/Users/users.firebase\";\n\n\nexport function LoginForm() {\n    const [email, setEmail] = useState(\"test@gmail.com\");\n    const [password, setPassword] = useState(\"password\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (!email || !password) {\n            setError(\"Please enter email and password.\");\n            return;\n        }\n        try {\n            await signInUser({ email, password })\n            navigate(\"/\")\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.error(`Error: ${errorCode} - ${errorMessage}`);\n            setError(`Error: ${errorCode} - ${errorMessage}`);\n        }\n    };\n\n    const redirectToRegister = (e) => {\n        e.preventDefault();\n        navigate(\"/register\");\n    }\n\n    return (\n        <div>\n            <form>\n                <label>\n                    Email:\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </label>\n                <br />\n                <button type=\"submit\" onClick={handleLogin}>Login</button>\n                <button type=\"register\" onClick={redirectToRegister}>Sign Up / Register</button>\n            </form>\n            {error && <code>{error}</code>}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { LoginForm } from \"./components/LoginForm\";\n\nexport function Login() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <hr />\n      <LoginForm />\n    </main>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../../../utils/Firebase/Users/users.firebase\";\n\nexport function RegisterForm() {\n  const [values, setValues] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = (e) => setValues({ ...values, [e.target.name]: e.target.value });\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    try {\n      await registerUser(values);\n      alert(\"Registration successful. Please login.\")\n      navigate(\"/login\")\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const backToLogin = () => navigate(\"/login\");\n\n  return (\n    <div>\n      <form>\n        <label>\n          First Name:\n          <input type=\"text\" name=\"firstName\" value={values.firstName} onChange={handleChange} />\n        </label>\n        <label>\n          Last Name:\n          <input type=\"text\" name=\"lastName\" value={values.lastName} onChange={handleChange} />\n        </label>\n        <br />\n        <label>\n          Email:\n          <input type=\"email\" name=\"email\" value={values.email} onChange={handleChange} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" name=\"password\" value={values.password} onChange={handleChange} />\n        </label>\n        <br />\n        <button type=\"submit\" onClick={handleSignUp}>Sign Up</button>\n        <button type=\"button\" onClick={backToLogin}>Back to Login</button>\n      </form>\n      {error && <code>{error}</code>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { RegisterForm } from \"./components/RegisterForm\";\n\nexport function Register() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <h2>Are you a new user? You can register you're self bellow!</h2>\n      <hr />\n      <RegisterForm />\n    </main>\n  );\n}","import { onValue, ref } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nimport { database } from \"../../utils/Firebase/Firebase\";\nimport { Navbar } from \"../../components/Navbar/Navbar\"\n\nexport function Scoreboard() {\n\n  const [scores, setScores] = useState([]);\n\n  function getHighestScore(user) {\n    const songScore = user.highScore.song || 0;\n    const quizScore = user.highScore.quiz || 0;\n    if (songScore > quizScore) {\n      return {\n        name: `${user.firstName} ${user.lastName}`,\n        type: \"Song\",\n        score: songScore\n      }\n    } else {\n      return {\n        name: `${user.firstName} ${user.lastName}`,\n        type: \"Quiz\",\n        score: quizScore\n      }\n    }\n  }\n\n  useEffect(() => {\n    onValue(ref(database, \"/users\"), (snapshot) => {\n      const users = Object.values(snapshot.val())\n      if (users) {\n        const highestScores = users\n          .map(user => getHighestScore(user))\n          .sort((a, b) => b.score - a.score)\n          .slice(0, 10)\n        setScores(highestScores);\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Navbar />\n      <main className=\"loggedIn\">\n        <h1> Scoreboard </h1>\n        <table className=\"table\">\n          <thead className=\"tableHead\">\n            <tr key={\"head\"} className=\"tableHeadRow\">\n              <th className=\"tableHeadIndex\"></th>\n              <th className=\"tableHeadName\"><span className=\"tabHead\" />Name</th>\n              <th className=\"tableHeadItem\">Type</th>\n              <th className=\"tableHeadItem\">Score</th>\n            </tr>\n          </thead>\n          <tbody className=\"tableBody\">\n            {scores.map((score, index) => {\n              return (\n                <tr key={index} className=\"tableBodyRow\">\n                  <td className=\"tableBodyIndex\"></td>\n                  <td className=\"tableBodyName\"><b>{index + 1}</b><span className=\"tabBody\" />{score.name}</td>\n                  <td className=\"tableBodyItem\">{score.type}</td>\n                  <td className=\"tableBodyItem\">{score.score}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </main>\n    </div>\n  );\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const BackButton = ({to, onClick}) => {\n  return (\n    <div>\n      <Link to={to} onClick={onClick} className=\"Links backButton\">\n        <FontAwesomeIcon\n          icon=\"fa-solid fa-arrow-left\"\n          style={{ color: '#ffffff' }}\n          className=\"icons\"\n        />\n      </Link>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react';\nimport { parseStringPromise } from 'xml2js';\nimport { searchDictionary } from '../../../../utils/Dictionary/searchDictionary';\n\nexport const Lyrics = ({ lyrics, currentLineIndex, setPopupInfo }) => {\n\n    const getKoreanDefinition = async (event, word) => {\n        event.stopPropagation();\n        console.log(\"word\", word)\n        const info = await searchDictionary(word);\n        if (!info) {\n            alert(\"No definition found\");\n        } else {\n            info.englishWord && setPopupInfo(info);\n        }\n    };\n\n    const extractKoreanWords = (sentence) => sentence.match(/[\\uAC00-\\uD7AF]+/g);\n\n    const generateLyric = (sentence) => {\n        if (sentence === \"\") {\n            return '•';\n        } else {\n            const words = sentence.split(/\\s+/);\n            const koreanWords = extractKoreanWords(sentence);\n            const lyrics = words.map((word, i) => {\n                if (koreanWords?.includes(word)) {\n                    return <a key={i} onClick={(event) => getKoreanDefinition(event, word)}> {` ${word} `} &nbsp;</a>;\n                } else {\n                    return ` ${word} `;\n                }\n            });\n            return lyrics;\n        }\n    };\n    return (\n        <div className=\"lyrics\">\n            {lyrics.map((item, index) => (\n                <div\n                    key={index}\n                    className={currentLineIndex === index ? 'highlighted' : ''}\n                    note={item.note}\n                >\n                    {generateLyric(item.line)}\n                </div>\n            ))}\n        </div>\n    );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react';\n\nexport const Player = ({\n  music_url,\n  album_url,\n  title,\n  artist,\n  audioRef,\n  handleTimeUpdate,\n  handleAudioEnd\n}) => {\n\n  return (\n    <div className=\"player\">\n      <div className=\"left\" style={{ backgroundImage: `url(${album_url})` }}></div>\n      <div className=\"right\">\n        <div className=\"top\">\n          <a className=\"song\">{title}</a>\n          <a className=\"artist\">{artist}</a>\n        </div>\n        <div className=\"bottom\">\n          <audio\n            ref={audioRef}\n            muted={true}\n            controls={true}\n            autoPlay={true}\n            name={'media'}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n          >\n            <source src={music_url} type=\"audio/mpeg\"></source>\n          </audio>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Scoreboard = ({ scoreState, audioRef }) => {\n  const navigate = useNavigate();\n  \n  const [score, setScore] = scoreState;\n\n  return score && (\n    <div className=\"score\">\n      <>\n        <h1 className=\"scoreDisplay\"> Your score: <br /> 🎤 {score} 🎤</h1>\n        <div className=\"scoreBoardNavBtn\">\n          <button onClick={() => navigate(\"/scoreboard\")}>Scoreboard</button>\n          {/* TODO for Minjun */}\n          <button onClick={() => {\n            setScore(null);\n            audioRef.current.controls = true;\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n          }\n          }>Practice Again</button>\n          <button onClick={() => navigate(\"/learn\")}>Other songs</button>\n        </div>\n      </>\n    </div>\n  )\n};\n","import { push, ref } from '@firebase/database';\nimport React from 'react'\nimport { auth, database } from '../../../../utils/Firebase/Firebase';\nimport { addBookmark } from '../../../../utils/Firebase/Bookmark/bookmark.firebase';\nimport { Link } from 'react-router-dom';\n\n\n// return { koreanWord, koreanDefinition, englishWord, englishDefinition }\n\nexport const Definition = ({popupInfo, setPopupInfo}) => {\n    console.log(\"popup\", popupInfo);\n    return (\n        <div className='definition'>\n                <h1 className='koreanWord'>\n                    {popupInfo.koreanWord}\n                </h1>\n                <h1 className='englishWord'>\n                    {popupInfo.englishWord}\n                </h1>\n                <h1 className='englishDefinition'>\n                    {popupInfo.englishDefinition}\n                </h1>\n                <h3 onClick={() => {\n                    setPopupInfo(null);\n                }}> Close\n                </h3>\n                <h1 onClick={async function(){\n                    await addBookmark(popupInfo);\n                    alert(\"Added!\");\n                    setPopupInfo(null);\n                }}>⭐ Add to bookmark ⭐</h1>\n            </div>\n    )\n}","import { getUser, updateUser } from \"../Users/users.firebase\";\n\nexport async function getRecentSongs() {\n    const user = await getUser();\n    return user.recentSongs;\n}\n\nexport async function addRecentSong(song) {\n    const recentSongs = await getRecentSongs() || [];\n    if (recentSongs.length === 3) {\n        recentSongs.shift();\n    }\n    recentSongs.push(song);\n    return updateUser({\n        recentSongs: recentSongs\n    });\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport \"./LyricPlayer.css\";\nimport { BackButton } from '../../../components/Buttons/BackButton';\nimport { Lyrics } from './components/Lyrics';\nimport { Player } from './components/Player';\nimport { Scoreboard } from './components/Scoreboard';\nimport { setSongScore } from '../../../utils/Firebase/Score/score.firebase';\nimport { Definition } from './components/Definition';\nimport { addRecentSong } from '../../../utils/Firebase/RecentSongs/recentSongs.firebase';\n\nexport const LyricPlayer = () => {\n\n    const [popupInfo, setPopupInfo] = useState();\n\n    const location = useLocation();\n    const song = location.state?.song;\n    const { music_url, album_url, artist, title, lyrics } = song || {};\n\n    const [currentLineIndex, setCurrentLineIndex] = useState(0);\n \n    const scoreState = useState(null);\n    const setScore = scoreState[1];\n\n    const contentRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const scrollToHighlightedLine = () => {\n        const highlightedElement = document.querySelector('.highlighted');\n        if (highlightedElement && contentRef.current) {\n            const highlightedHeight = highlightedElement.offsetHeight;\n            const contentHeight = contentRef.current.offsetHeight;\n            const highlightedTop = highlightedElement.offsetTop;\n            const scrollValue = highlightedTop - (contentHeight - highlightedHeight) / 2;\n            contentRef.current.scrollTop = scrollValue;\n        }\n    };\n\n    const handleTimeUpdate = async () => {\n        const time = audioRef.current.currentTime * 1000;\n        setCurrentLineIndex(prevIndex => {\n            const past = lyrics.filter((item) => item.time < time);\n            if (past.length !== prevIndex) {\n                scrollToHighlightedLine();\n            }\n            return past.length - 1;\n        });\n    };\n\n\n    const handleAudioEnd = async () => {\n        const randomScore = Math.floor(Math.random() * 100);\n        await setSongScore(randomScore);\n        await addRecentSong(song);\n        setScore(randomScore);\n        audioRef.current.controls = false;\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('resize', scrollToHighlightedLine);\n        return () => {\n            window.removeEventListener('resize', scrollToHighlightedLine);\n        };\n    }, []);\n\n    return (\n        <div className=\"pbody\">\n            <BackButton to={\"/learn\"} />\n            <div className=\"content\" ref={contentRef}>\n                <Lyrics\n                    setPopupInfo={setPopupInfo}\n                    lyrics={lyrics}\n                    currentLineIndex={currentLineIndex}\n                />\n            </div>\n            <Player\n                music_url={music_url}\n                album_url={album_url}\n                title={title}\n                artist={artist}\n                audioRef={audioRef}\n                handleTimeUpdate={handleTimeUpdate}\n                handleAudioEnd={handleAudioEnd}\n            />\n            <Scoreboard\n                scoreState={scoreState}\n                audioRef={audioRef}\n            />\n            {popupInfo && <Definition popupInfo={popupInfo} setPopupInfo={setPopupInfo}/>}\n        </div>\n    );\n};\n\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\n\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport ProtectedRoutes from './components/Router/ProtectedRoutes';\nimport { Dictionary } from './pages/Dictionary/Dictionary';\nimport { Learn } from './pages/Learn/Learn';\nimport { Home } from './pages/Home/Home';\nimport { Login } from './pages/Login/Login';\nimport { Register } from './pages/Register/Register';\nimport { Scoreboard } from './pages/Scoreboard/Scoreboard';\nimport { LyricPlayer } from './pages/Learn/LyricPlayer/LyricPlayer';\n\nlibrary.add(fas)\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={`/${process.env.PUBLIC_URL}`}>\n        <Routes>\n          <Route element={<ProtectedRoutes />}>\n            <Route path='/' element={<Home />} ></Route>\n            <Route path='/learn' element={<Learn />} ></Route>\n            <Route path='/dictionary' element={<Dictionary />} ></Route>\n            <Route path='/scoreboard' element={<Scoreboard />} ></Route>\n            <Route path=\"/lyric-player\" element={<LyricPlayer />}></Route>\n          </Route>\n          <Route path=\"/register\" element={<Register />}></Route>\n          <Route path=\"/login\" element={<Login />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <App />\n);\n"],"sourceRoot":""}