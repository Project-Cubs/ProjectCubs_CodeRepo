{"version":3,"sources":["components/LyricPlayer/LyricPlayer.js","components/ProtectedRoutes.js","data/songs.js","components/Navbar/Navbar.js","pages/Dashboard.js","services/Firebase.js","components/Bookmark/Bookmark.js","pages/Dictionary.js","pages/Home.js","components/Cards/Cards.js","services/Database.js","pages/Learn.js","components/LoginForm/LoginForm.js","pages/Login.js","App.js","index.js"],"names":["LyricPlayer","_location$state","song","useLocation","state","_song","_objectSpread","music_url","title","artist","album_url","lyrics","_useState","useState","_useState2","_slicedToArray","currentLineIndex","setCurrentLineIndex","contentRef","useRef","videoRef","align","highlightedElement","document","querySelector","current","highlightedHeight","offsetHeight","contentHeight","scrollValue","offsetTop","scrollTop","_getKoreanDefinition","_asyncToGenerator","_regeneratorRuntime","mark","_callee","word","_json$channel$item","_json$channel$item$0$","_json$channel$item$0$2","q","response","headers","text","json","definition","wrap","_context","prev","next","fetch","concat","mode","sent","Headers","set","clone","console","log","parseStringPromise","channel","item","sense","translation","trans_dfn","alert","stop","apply","arguments","generateLyric","sentence","words","split","koreanWords","match","extractKoreanWords","map","includes","_jsxs","onClick","_x","getKoreanDefinition","children","useEffect","window","addEventListener","removeEventListener","className","_jsx","ref","index","note","line","style","backgroundImage","controls","autoPlay","name","loop","onTimeUpdate","time","currentTime","past","filter","length","duration","Math","floor","random","src","type","ProtectedRoutes","user","JSON","parse","localStorage","getItem","Outlet","context","Navigate","to","songs","Navbar","navigate","useNavigate","NavLink","removeItem","Dashboard","firebaseConfig","env","app","initializeApp","auth","getAuth","database","getDatabase","Bookmark","setWord","_useState3","_useState4","setWords","_useState5","_useState6","updateWordId","setupdateWordId","db_ref","onValue","snapshot","key","val","data","wordArray","id","push","onChange","event","target","value","defaultValue","preventDefault","newTitle","handleChange","e","remove","handleDelete","Dictionary","Home","SongCard","_ref","db_create","path","input","Learn","setSongs","get","then","db_get","i","LoginForm","email","setEmail","password","setPassword","error","setError","_handleSignUp","user_email","createUserWithEmailAndPassword","t0","message","signInWithEmailAndPassword","userCredential","setItem","stringify","catch","errorCode","code","errorMessage","Login","App","BrowserRouter","basename","process","Routes","Route","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.bf54c8dd.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { parseStringPromise } from 'xml2js';\nimport './LyricPlayer.css'\n\nexport const LyricPlayer = () => {\n\n    const location = useLocation();\n    const song = location.state?.song;\n\n    const { music_url, title, artist, album_url, lyrics } = { ...song }\n    const [currentLineIndex, setCurrentLineIndex] = useState(0);\n    const contentRef = useRef(null);\n    const videoRef = useRef(null);\n    const align = () => {\n        const highlightedElement = document.querySelector('.highlighted');\n        if (highlightedElement && contentRef.current) {\n            const highlightedHeight = highlightedElement.offsetHeight;\n            const contentHeight = contentRef.current.offsetHeight;\n            const highlightedTop = highlightedElement.offsetTop;\n            const scrollValue = highlightedTop - (contentHeight - highlightedHeight) / 2;\n            contentRef.current.scrollTop = scrollValue;\n        }\n    };\n    const handleTimeUpdate = () => {\n        const time = videoRef.current.currentTime * 1000;\n        const past = lyrics.filter((item) => item.time < time);\n        if (past.length !== currentLineIndex) {\n            setCurrentLineIndex(past.length - 1);\n            align();\n        }\n        console.log(videoRef.current.currentTime + '/' + videoRef.current.duration);\n        if (videoRef.current.currentTime > videoRef.current.duration - 0.2) {\n            alert(\"Your Score is: \" + Math.floor(Math.random() * 100))\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('resize', align);\n        return () => {\n            window.removeEventListener('resize', align);\n        };\n    }, []);\n\n    async function getKoreanDefinition(word) {\n        const url = \"https://krdict.korean.go.kr/api/search\";\n        const key = \"313D5A71F45A553EE6F384880AD5CB9C\";\n        const q = word;\n        const translated = \"y\";\n        const trans_lang = \"1\";\n        const response = await fetch(`${url}?key=${key}&q=${q}&translated=${translated}&trans_lang=${trans_lang}`, {\n            mode: 'no-cors',\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        const headers = new Headers(response.headers);\n        headers.set(\"Access-Control-Allow-Origin\", \"*\");\n        headers.set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        // headers.set('Access-Control-Allow-Origin', '*');\n        const text = await response.clone({ headers: headers }).text();\n\n        // const text = await response.text();\n        console.log(text);\n        const json = await parseStringPromise(text);\n        console.log(json);\n        const definition = json.channel.item?.[0].sense?.[0].translation?.[0].trans_dfn;\n        definition ? alert(`Definition: ${definition}`) : alert(\"No definition found\");\n    }\n\n\n    function extractKoreanWords(sentence) {\n        const koreanRegex = /[\\uAC00-\\uD7AF]+/g;\n        const matches = sentence.match(koreanRegex);\n        return matches;\n    }\n\n    function generateLyric(sentence) {\n        if (sentence === \"\") {\n            return '•'\n        } else {\n            const words = sentence.split(/\\s+/);\n            // console.log(\"words\", words);\n            const koreanWords = extractKoreanWords(sentence);\n            // console.log(\"korean words\", koreanWords);\n            const lyrics = words.map(word => {\n                if (koreanWords?.includes(word)) {\n                    return (\n                        <a onClick={() => getKoreanDefinition(word)}> {` ${word} `} &nbsp;</a>\n                    )\n                } else {\n                    return ` ${word} `\n                }\n            });\n            return lyrics;\n        }\n    }\n\n    return (\n        <div className=\"pbody\">\n            <div className=\"content\" ref={contentRef}>\n                <div className=\"lyrics\">\n                    {lyrics.map((item, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className={currentLineIndex === index ? 'highlighted' : ''}\n                                note={item.note}\n                            >\n                                {generateLyric(item.line)}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"player\">\n                <div className=\"left\" style={{ backgroundImage: `url(${album_url})` }}></div>\n                <div className=\"right\">\n                    <div className=\"top\">\n                        <a className=\"song\">{title}</a>\n                        <a className=\"artist\">{artist}</a>\n                    </div>\n                    <div className=\"bottom\">\n                        <video\n                            ref={videoRef}\n                            controls={true}\n                            autoPlay={true}\n                            name={\"media\"}\n                            loop={true}\n                            onTimeUpdate={handleTimeUpdate}\n                        >\n                            <source src={music_url} type=\"audio/mpeg\"></source>\n                        </video>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};","import { Navigate, Outlet } from \"react-router-dom\";\n\nconst ProtectedRoutes = function () {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return user ? <Outlet context={[user]} /> : <Navigate to={\"/login\"} />;\n};\n\nexport default ProtectedRoutes;\n","export const songs = [\n\n    {\n        \"title\": \"What is Love?\",\n        \"artist\": \"Twice\",\n        \"music_url\": \"https://audio.jukehost.co.uk/IGYozUMdodb9Q45YWlILUjxFvJ8gsZ6g\",\n        \"album_url\": \"https://www.kpopusaonline.com/wp-content/uploads/2019/11/232.1.jpg\",\n        \"lyrics\": [\n            {\n                \"line\": \"\",\n                \"time\": -1\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 7220\n            },\n            {\n                \"line\": \"\",\n                \"time\": 8430\n            },\n            {\n                \"line\": \"매일같이 영화 속에서나\",\n                \"time\": 11220\n            },\n            {\n                \"line\": \"책 속에서나 드라마 속에서 사랑을 느껴\",\n                \"time\": 13440\n            },\n            {\n                \"line\": \"Mmm, 사랑을 배워\",\n                \"time\": 17880\n            },\n            {\n                \"line\": \"내 일처럼 자꾸 가슴이 뛰어\",\n                \"time\": 22380\n            },\n            {\n                \"line\": \"두근두근거려 설레임에 부풀어 올라\",\n                \"time\": 24670\n            },\n            {\n                \"line\": \"Mmm, 궁금해서 미칠 것만 같아\",\n                \"time\": 29740\n            },\n            {\n                \"line\": \"\",\n                \"time\": 33800\n            },\n            {\n                \"line\": \"Ooh, 언젠간 내게도\",\n                \"time\": 34310\n            },\n            {\n                \"line\": \"이런 일이 실제로 일어날까\",\n                \"time\": 36090\n            },\n            {\n                \"line\": \"그게 언제쯤일까? 어떤 사람일까?\",\n                \"time\": 40150\n            },\n            {\n                \"line\": \"\",\n                \"time\": 44080\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 44590\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 45030\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 47310\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 48010\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 50360\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 52140\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 53020\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 55630\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 56390\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 58730\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 59560\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 61720\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 63490\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 64450\n            },\n            {\n                \"line\": \"\",\n                \"time\": 67300\n            },\n            {\n                \"line\": \"지금 이런 상상만으로도\",\n                \"time\": 67680\n            },\n            {\n                \"line\": \"떠올려만 봐도 가슴이 터질 것 같은데\",\n                \"time\": 70600\n            },\n            {\n                \"line\": \"Mmm, 이렇게 좋은데\",\n                \"time\": 74340\n            },\n            {\n                \"line\": \"만일 언젠가 진짜로 내게\",\n                \"time\": 78780\n            },\n            {\n                \"line\": \"사랑이 올 때 난 울어버릴지도 몰라\",\n                \"time\": 81320\n            },\n            {\n                \"line\": \"Mmm, 정말 궁금해 미칠 것만 같아\",\n                \"time\": 85820\n            },\n            {\n                \"line\": \"\",\n                \"time\": 89950\n            },\n            {\n                \"line\": \"Ooh, 언젠간 내게도\",\n                \"time\": 90650\n            },\n            {\n                \"line\": \"이런 일이 실제로 일어날까\",\n                \"time\": 92550\n            },\n            {\n                \"line\": \"그게 언제쯤일까? 어떤 사람일까?\",\n                \"time\": 96920\n            },\n            {\n                \"line\": \"\",\n                \"time\": 100480\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 100990\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 101750\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 103910\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 104480\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 106760\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 108530\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 109680\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 112090\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 112910\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 115010\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 115580\n            },\n            {\n                \"line\": \"{All} I wanna know know know know\",\n                \"time\": 118180\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 119890\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 120910\n            },\n            {\n                \"line\": \"\",\n                \"time\": 123890\n            },\n            {\n                \"line\": \"지금 세상 어느 곳에 살고 있는지\",\n                \"time\": 124330\n            },\n            {\n                \"line\": \"도대체 언제쯤 나와 만나게 될는지\",\n                \"time\": 126680\n            },\n            {\n                \"line\": \"언제 어떻게 우리의 인연은\",\n                \"time\": 129340\n            },\n            {\n                \"line\": \"시작될는지 모르지만 느낌이 어쩐지\",\n                \"time\": 131550\n            },\n            {\n                \"line\": \"진짜 좋을 것 같아 왠지\",\n                \"time\": 135100\n            },\n            {\n                \"line\": \"영화 드라마보다도 더 멋진 (멋진)\",\n                \"time\": 137830\n            },\n            {\n                \"line\": \"사랑이 올 거야 내 예감 언제나 맞지 (Ooh-ooh)\",\n                \"time\": 140620\n            },\n            {\n                \"line\": \"어서 나타나봐 나는 다 준비가 됐지 ready\",\n                \"time\": 143290\n            },\n            {\n                \"line\": \"\",\n                \"time\": 146330\n            },\n            {\n                \"line\": \"어디 있을까?\",\n                \"time\": 146840\n            },\n            {\n                \"line\": \"찾아낼 거야\",\n                \"time\": 148170\n            },\n            {\n                \"line\": \"어디 있을까?\",\n                \"time\": 149380\n            },\n            {\n                \"line\": \"보고 싶어 죽겠어\",\n                \"time\": 151090\n            },\n            {\n                \"line\": \"더 이상 참을 수 없을 것만 같아\",\n                \"time\": 153060\n            },\n            {\n                \"line\": \"\",\n                \"time\": 156990\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 157500\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 160040\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 163080\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 164980\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 165930\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 168470\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 171710\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 174630\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 176150\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 177350\n            },\n            {\n                \"line\": \"\",\n                \"time\": 180460\n            },\n            {\n                \"line\": \"I wanna know, I wanna know\",\n                \"time\": 180840\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 185730\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 187630\n            },\n            {\n                \"line\": \"I wanna know, I wanna know\",\n                \"time\": 188580\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 197280\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 199110\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 202600\n            },\n            {\n                \"line\": \"\",\n                \"time\": 203940\n            }\n        ]\n    }\n]","import { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nexport const Navbar = function () {\n  const navigate = useNavigate()\n  return (\n    <div>\n      <nav>\n        <h1>My K Star</h1>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          {\" \"}\n          Home{\" \"}\n        </NavLink>\n        <NavLink to={\"/dashboard\"} className={\"Links\"}>\n          {\" \"}\n          Dashboard{\" \"}\n        </NavLink>\n        <NavLink to={\"/dictionary\"} className={\"Links\"}>\n          {\" \"}\n          Dictionary{\" \"}\n        </NavLink>\n        <NavLink to={\"/learn\"} className={\"Links\"}>\n          {\" \"}\n          Learn{\" \"}\n        </NavLink>\n        <button onClick={function () {\n          localStorage.removeItem(\"user\");\n          navigate(\"/login\")\n        }}>Logout</button>\n      </nav>\n      <hr className=\"navbar-divider\" />\n    </div>\n  );\n};\n","import { Navbar } from \"../components/Navbar/Navbar\";\n\nexport const Dashboard = function () {\n\n  \n  return (\n    <div>\n      <Navbar></Navbar>\n      <main>\n        <h1>Dashboard</h1>\n        <p>\n          Adipisicing cupidatat labore non fugiat labore aute in deserunt magna\n          velit ea eiusmod. Anim cupidatat laborum pariatur incididunt ad ut\n          eiusmod. Ullamco sit fugiat occaecat pariatur eiusmod minim dolore\n          pariatur ea ullamco. Qui eiusmod qui cillum aliqua labore ea. Duis\n          adipisicing tempor cupidatat ut sunt aute consequat do anim in\n          cupidatat.\n        </p>\n      </main>\n    </div>\n  );\n};\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport env from \"react-dotenv\";\n\nconst firebaseConfig = { ...env };\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const database = getDatabase(app);","import {\n    onValue,\n    push,\n    ref,\n    remove,\n    set,\n} from \"firebase/database\";\nimport React, { useEffect, useState } from \"react\";\nimport { database } from \"../../services/Firebase\";\nimport \"./Bookmark.css\"\n\nexport const Bookmark = () => {\n    const [word, setWord] = useState(\"\");\n    const [words, setWords] = useState([]);\n    const [updateWordId, setupdateWordId] = useState(\"\");\n\n    useEffect(() => {\n        const db_ref = ref(database, \"/words\");\n        onValue(db_ref, (snapshot) => {\n            // console.log(\"snapshot\", snapshot);\n            console.log(\"value\", snapshot.val());\n            //print all values\n            for (let key in snapshot.val()) {\n                console.log(snapshot.val());\n                const data = snapshot.val();\n                console.log(\"value\", snapshot.val()[key]);\n                const wordArray = [];\n                for (let id in data) {\n                    wordArray.push({ id, ...data[id] });\n                }\n                console.log(\"wordArray\", wordArray);\n                setWords(wordArray);\n            }\n        });\n    }, []);\n\n    function addWord(event) {\n        event.preventDefault();\n        const db_ref = ref(database, \"/words\");\n        push(db_ref, {\n            title: word,\n        });\n    }\n\n    function handleDelete(id, e) {\n        const db_ref = ref(database, `/words/${id}`);\n        remove(db_ref);\n    }\n\n    function handleUpdate(id) {\n        setupdateWordId(id);\n    }\n\n    function handleChange(id, newTitle) {\n        const db_ref = ref(database, `/words/${id}`);\n        set(db_ref, {\n            title: newTitle,\n        });\n        setupdateWordId(\"\");\n    }\n    return (\n        <section>\n            <form className=\"bookmark-form\">\n                <input\n                    type=\"text\"\n                    onChange={(event) => {\n                        setWord(event.target.value);\n                    }}\n                    defaultValue={word}\n                />\n                <button onClick={addWord} type=\"submit\">\n                    Bookmark\n                </button>\n                <ul>\n                    {words.map((word) => {\n                        return (\n                            <li key={word.id}>\n                                {word.title}\n                                {updateWordId === word.id ? (\n                                    <div>\n                                        <input\n                                            type={\"text\"}\n                                            defaultValue={\"...\"}\n                                            onChange={function (event) {\n                                                handleChange(word.id, event.target.value);\n                                            }}\n                                        />\n                                        <button\n                                            type={\"submit\"}\n                                            onClick={function (e) {\n                                                e.preventDefault();\n                                                setupdateWordId(\"\");\n                                            }}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <button\n                                            type={\"submit\"}\n                                            onClick={function (e) {\n                                                e.preventDefault();\n                                                handleUpdate(word.id);\n                                            }}\n                                        >\n                                            Edit\n                                        </button>\n\n                                        <button\n                                            onClick={function (e) {\n                                                handleDelete(word.id, e);\n                                            }}\n                                            type=\"submit\"\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                )}\n                            </li>\n                        );\n                    })}\n                </ul>\n            </form>\n        </section>\n    )\n}","import React from \"react\";\nimport { Bookmark } from \"../components/Bookmark/Bookmark\";\nimport { Navbar } from \"../components/Navbar/Navbar\";\n\nexport const Dictionary = function () {\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <header>\n        <blockquote>\n          <h1>\n            My K Star Dictionary\n          </h1>\n          <footer>\n            <h2>\n              Find meanings and save for quick reference\n            </h2>\n          </footer>\n        </blockquote>\n        <Bookmark />\n      </header>\n    </div>\n  );\n};\n","import { Navbar } from \"../components/Navbar/Navbar\";\n\nexport const Home = function () {\n  return (\n    <div>\n      <Navbar />\n      <main>\n        <h1>Home</h1>\n        <p>\n          Adipisicing cupidatat labore non fugiat labore aute in deserunt magna\n          velit ea eiusmod. Anim cupidatat laborum pariatur incididunt ad ut\n          eiusmod. Ullamco sit fugiat occaecat pariatur eiusmod minim dolore\n          pariatur ea ullamco. Qui eiusmod qui cillum aliqua labore ea. Duis\n          adipisicing tempor cupidatat ut sunt aute consequat do anim in\n          cupidatat.\n        </p>\n      </main>\n    </div>\n  );\n};\n","import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LyricPlayer } from '../LyricPlayer/LyricPlayer';\n\nexport function SongCard({ song }) {\n    const { album_url, artist, title } = { ...song };\n    const navigate = useNavigate();\n    return (\n        <aside>\n            <h3> {title} </h3>\n            <figure>\n                <img src={album_url} />\n                <figcaption>\n                    <i> Artist: {artist} </i>\n                </figcaption>\n            </figure>\n            <button onClick={() => {\n                navigate(\"/lyric-player\", { state: { song } })\n            }}>\n                Sing!\n            </button>\n        </aside>\n    );\n}","import { get, ref, set } from \"firebase/database\";\nimport { database } from \"./Firebase\";\n\nexport const db_create = (path, input) => {\n    const db_ref = ref(database, path);\n    set(db_ref, input)\n}\n\nexport const db_get = (path) => {\n    const db_ref = ref(database, path);\n    const result = get(db_ref).then(snapshot => {\n        return snapshot.val()\n    })\n    return result;\n}","import { useEffect, useState } from \"react\";\nimport { SongCard } from \"../components/Cards/Cards\";\nimport { Navbar } from \"../components/Navbar/Navbar\";\nimport { db_get } from \"../services/Database\";\n\nexport const Learn = () => {\n\n    const [songs, setSongs] = useState([]);\n\n    useEffect(() => {\n        db_get(\"songs\").then(songs => {\n            setSongs(songs)\n        })\n    }, [])\n\n    return (\n        <div>\n            <Navbar></Navbar>\n            <main>\n                <h1> Learn </h1>\n                <section>\n                    {songs.map((song, i) => {\n                        return (<SongCard key={i} song={song} />)\n                    })}\n                </section>\n            </main>\n        </div>\n    )\n}\n\n","import {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../services/Firebase\";\n\nexport function LoginForm() {\n    const [email, setEmail] = useState(\"test@gmail.com\");\n    const [password, setPassword] = useState(\"password\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = (e) => {  //can make it faster by using async await\n        e.preventDefault();\n\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                localStorage.setItem(\"user\", JSON.stringify(user));\n                console.log(\"Signed in as user:\", user);\n                navigate(\"/\");\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.error(`Error signing in: ${errorCode} - ${errorMessage}`);\n                setError(`Error signing in: ${errorCode} - ${errorMessage}`);\n            });\n    };\n\n\n\n    async function handleSignUp(event) {\n        event.preventDefault();\n        console.log(\"handleSingUp\")\n        try {\n            const response = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password\n            );\n            const user_email = response.user.email;\n            console.log(response);\n            console.log(\"signed up with email: \" + user_email);\n        } catch (error) {\n            setError(error.message);\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <form>\n                <label>\n                    Email:\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </label>\n                <br />\n                <button type=\"submit\" onClick={handleLogin}>Login</button>\n                <button type=\"submit\" onClick={handleSignUp}>Sign Up</button>\n            </form>\n            {error && <code>{error}</code>}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { LoginForm } from \"../components/LoginForm/LoginForm\";\n\nexport function Login() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <hr />\n      <LoginForm/>\n    </main>\n  );\n}\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { LyricPlayer } from \"./components/LyricPlayer/LyricPlayer\";\nimport ProtectedRoutes from \"./components/ProtectedRoutes\";\nimport { songs } from \"./data/songs\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Dictionary } from \"./pages/Dictionary\";\nimport { Home } from \"./pages/Home\";\nimport { Learn } from \"./pages/Learn\";\nimport { Login } from \"./pages/Login\";\nimport { db_create } from \"./services/Database\";\n\nfunction App() {\n  db_create(\"songs\", songs);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route element={<ProtectedRoutes />}>\n            <Route path=\"/\" element={<Home />}></Route>\n            <Route path=\"/learn\" element={<Learn />}></Route>\n            <Route path=\"/dictionary\" element={<Dictionary />}></Route>\n            <Route path=\"/dashboard\" element={<Dashboard />}></Route>\n            <Route path=\"/lyric-player\" element={<LyricPlayer />}></Route>\n          </Route>\n          <Route\n            path=\"/login\"\n            element={<Login />}\n          ></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <App />\n);\n"],"sourceRoot":""}