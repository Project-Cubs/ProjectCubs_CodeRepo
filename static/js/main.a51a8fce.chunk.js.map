{"version":3,"sources":["components/LyricPlayer/LyricPlayer.js","components/ProtectedRoutes.js","data/songs.js","components/Navbar/Navbar.js","pages/Dashboard.js","services/Firebase.js","components/Bookmark/Bookmark.js","pages/Dictionary.js","components/WordQuiz.js","pages/Home.js","components/Cards/Cards.js","services/Database.js","pages/Learn.js","components/LoginForm/LoginForm.js","pages/Login.js","App.js","index.js"],"names":["LyricPlayer","_location$state","song","useLocation","state","_song","_objectSpread","music_url","title","artist","album_url","lyrics","_useState","useState","_useState2","_slicedToArray","currentLineIndex","setCurrentLineIndex","contentRef","useRef","videoRef","align","highlightedElement","document","querySelector","current","highlightedHeight","offsetHeight","contentHeight","scrollValue","offsetTop","scrollTop","_getKoreanDefinition","_asyncToGenerator","_regeneratorRuntime","mark","_callee","word","_json$channel$item","_json$channel$item$0$","_json$channel$item$0$2","q","response","text","json","definition","wrap","_context","prev","next","process","fetch","concat","sent","parseStringPromise","channel","item","sense","translation","trans_dfn","alert","stop","apply","arguments","generateLyric","sentence","words","split","koreanWords","match","extractKoreanWords","map","i","includes","_jsxs","onClick","_x","getKoreanDefinition","children","useEffect","window","addEventListener","removeEventListener","className","_jsx","ref","index","note","line","style","backgroundImage","controls","autoPlay","name","loop","onTimeUpdate","time","currentTime","past","filter","length","console","log","duration","Math","floor","random","src","type","ProtectedRoutes","user","JSON","parse","localStorage","getItem","Outlet","context","Navigate","to","songs","Navbar","navigate","useNavigate","NavLink","removeItem","Dashboard","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","database","getDatabase","Bookmark","setWord","_useState3","_useState4","setWords","_useState5","_useState6","updateWordId","setupdateWordId","db_ref","onValue","snapshot","key","val","data","wordArray","id","push","onChange","event","target","value","defaultValue","preventDefault","newTitle","set","handleChange","e","remove","handleDelete","Dictionary","WORDS","meaning","WordQuiz","score","setScore","currentWord","setCurrentWord","_useState7","_useState8","options","setOptions","_useState9","_useState10","selectedOption","setSelectedOption","shuffleArray","array","shuffledArray","_toConsumableArray","j","_ref","currentMeaning","otherMeanings","sort","slice","min","generateOptions","option","checked","handleOptionSelect","currentAnswer","parseInt","Home","SongCard","Learn","setSongs","path","get","then","db_get","LoginForm","email","setEmail","password","setPassword","error","setError","_handleSignUp","user_email","createUserWithEmailAndPassword","t0","message","signInWithEmailAndPassword","userCredential","setItem","stringify","catch","errorCode","code","errorMessage","Login","App","input","db_create","BrowserRouter","basename","Routes","Route","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.a51a8fce.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { parseStringPromise } from 'xml2js';\nimport './LyricPlayer.css';\n\nexport const LyricPlayer = () => {\n\n    const location = useLocation();\n    const song = location.state?.song;\n\n    const { music_url, title, artist, album_url, lyrics } = { ...song }\n    const [currentLineIndex, setCurrentLineIndex] = useState(0);\n    const contentRef = useRef(null);\n    const videoRef = useRef(null);\n    const align = () => {\n        const highlightedElement = document.querySelector('.highlighted');\n        if (highlightedElement && contentRef.current) {\n            const highlightedHeight = highlightedElement.offsetHeight;\n            const contentHeight = contentRef.current.offsetHeight;\n            const highlightedTop = highlightedElement.offsetTop;\n            const scrollValue = highlightedTop - (contentHeight - highlightedHeight) / 2;\n            contentRef.current.scrollTop = scrollValue;\n        }\n    };\n    const handleTimeUpdate = () => {\n        const time = videoRef.current.currentTime * 1000;\n        const past = lyrics.filter((item) => item.time < time);\n        if (past.length !== currentLineIndex) {\n            setCurrentLineIndex(past.length - 1);\n            align();\n        }\n        console.log(videoRef.current.currentTime + '/' + videoRef.current.duration);\n        if (videoRef.current.currentTime > videoRef.current.duration - 0.2) {\n            alert(\"Your Score is: \" + Math.floor(Math.random() * 100))\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('resize', align);\n        return () => {\n            window.removeEventListener('resize', align);\n        };\n    }, []);\n\n    async function getKoreanDefinition(word) {\n        const url = process.env.REACT_APP_DICT_URL;\n        const key = process.env.REACT_APP_DICT_KEY;\n\n        const q = word;\n        const translated = \"y\";\n        const trans_lang = \"1\";\n        const response = await fetch(`${url}?key=${key}&q=${q}&translated=${translated}&trans_lang=${trans_lang}`);\n\n        const text = await response.text();\n\n        const json = await parseStringPromise(text);\n        const definition = json.channel.item?.[0].sense?.[0].translation?.[0].trans_dfn;\n        definition ? alert(`Definition: ${definition}`) : alert(\"No definition found\");\n    }\n\n\n    function extractKoreanWords(sentence) {\n        const koreanRegex = /[\\uAC00-\\uD7AF]+/g;\n        const matches = sentence.match(koreanRegex);\n        return matches;\n    }\n\n    function generateLyric(sentence) {\n        if (sentence === \"\") {\n            return '•'\n        } else {\n            const words = sentence.split(/\\s+/);\n            // console.log(\"words\", words);\n            const koreanWords = extractKoreanWords(sentence);\n            // console.log(\"korean words\", koreanWords);\n            const lyrics = words.map((word, i) => {\n                if (koreanWords?.includes(word)) {\n                    return (\n                        <a key={i} onClick={() => getKoreanDefinition(word)}> {` ${word} `} &nbsp;</a>\n                    )\n                } else {\n                    return ` ${word} `\n                }\n            });\n            return lyrics;\n        }\n    }\n\n    return (\n        <div className=\"pbody\">\n            <div className=\"content\" ref={contentRef}>\n                <div className=\"lyrics\">\n                    {lyrics.map((item, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className={currentLineIndex === index ? 'highlighted' : ''}\n                                note={item.note}\n                            >\n                                {generateLyric(item.line)}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"player\">\n                <div className=\"left\" style={{ backgroundImage: `url(${album_url})` }}></div>\n                <div className=\"right\">\n                    <div className=\"top\">\n                        <a className=\"song\">{title}</a>\n                        <a className=\"artist\">{artist}</a>\n                    </div>\n                    <div className=\"bottom\">\n                        <video\n                            ref={videoRef}\n                            controls={true}\n                            autoPlay={true}\n                            name={\"media\"}\n                            loop={true}\n                            onTimeUpdate={handleTimeUpdate}\n                        >\n                            <source src={music_url} type=\"audio/mpeg\"></source>\n                        </video>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};","import { Navigate, Outlet } from \"react-router-dom\";\n\nconst ProtectedRoutes = function () {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return user ? <Outlet context={[user]} /> : <Navigate to={\"/login\"} />;\n};\n\nexport default ProtectedRoutes;\n","export const songs = [\n\n    {\n        \"title\": \"What is Love?\",\n        \"artist\": \"Twice\",\n        \"music_url\": \"https://audio.jukehost.co.uk/IGYozUMdodb9Q45YWlILUjxFvJ8gsZ6g\",\n        \"album_url\": \"https://www.kpopusaonline.com/wp-content/uploads/2019/11/232.1.jpg\",\n        \"lyrics\": [\n            {\n                \"line\": \"\",\n                \"time\": -1\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 7220\n            },\n            {\n                \"line\": \"\",\n                \"time\": 8430\n            },\n            {\n                \"line\": \"매일같이 영화 속에서나\",\n                \"time\": 11220\n            },\n            {\n                \"line\": \"책 속에서나 드라마 속에서 사랑을 느껴\",\n                \"time\": 13440\n            },\n            {\n                \"line\": \"Mmm, 사랑을 배워\",\n                \"time\": 17880\n            },\n            {\n                \"line\": \"내 일처럼 자꾸 가슴이 뛰어\",\n                \"time\": 22380\n            },\n            {\n                \"line\": \"두근두근거려 설레임에 부풀어 올라\",\n                \"time\": 24670\n            },\n            {\n                \"line\": \"Mmm, 궁금해서 미칠 것만 같아\",\n                \"time\": 29740\n            },\n            {\n                \"line\": \"\",\n                \"time\": 33800\n            },\n            {\n                \"line\": \"Ooh, 언젠간 내게도\",\n                \"time\": 34310\n            },\n            {\n                \"line\": \"이런 일이 실제로 일어날까\",\n                \"time\": 36090\n            },\n            {\n                \"line\": \"그게 언제쯤일까? 어떤 사람일까?\",\n                \"time\": 40150\n            },\n            {\n                \"line\": \"\",\n                \"time\": 44080\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 44590\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 45030\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 47310\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 48010\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 50360\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 52140\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 53020\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 55630\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 56390\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 58730\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 59560\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 61720\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 63490\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 64450\n            },\n            {\n                \"line\": \"\",\n                \"time\": 67300\n            },\n            {\n                \"line\": \"지금 이런 상상만으로도\",\n                \"time\": 67680\n            },\n            {\n                \"line\": \"떠올려만 봐도 가슴이 터질 것 같은데\",\n                \"time\": 70600\n            },\n            {\n                \"line\": \"Mmm, 이렇게 좋은데\",\n                \"time\": 74340\n            },\n            {\n                \"line\": \"만일 언젠가 진짜로 내게\",\n                \"time\": 78780\n            },\n            {\n                \"line\": \"사랑이 올 때 난 울어버릴지도 몰라\",\n                \"time\": 81320\n            },\n            {\n                \"line\": \"Mmm, 정말 궁금해 미칠 것만 같아\",\n                \"time\": 85820\n            },\n            {\n                \"line\": \"\",\n                \"time\": 89950\n            },\n            {\n                \"line\": \"Ooh, 언젠간 내게도\",\n                \"time\": 90650\n            },\n            {\n                \"line\": \"이런 일이 실제로 일어날까\",\n                \"time\": 92550\n            },\n            {\n                \"line\": \"그게 언제쯤일까? 어떤 사람일까?\",\n                \"time\": 96920\n            },\n            {\n                \"line\": \"\",\n                \"time\": 100480\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 100990\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 101750\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 103910\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 104480\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 106760\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 108530\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 109680\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 112090\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 112910\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 115010\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 115580\n            },\n            {\n                \"line\": \"{All} I wanna know know know know\",\n                \"time\": 118180\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 119890\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 120910\n            },\n            {\n                \"line\": \"\",\n                \"time\": 123890\n            },\n            {\n                \"line\": \"지금 세상 어느 곳에 살고 있는지\",\n                \"time\": 124330\n            },\n            {\n                \"line\": \"도대체 언제쯤 나와 만나게 될는지\",\n                \"time\": 126680\n            },\n            {\n                \"line\": \"언제 어떻게 우리의 인연은\",\n                \"time\": 129340\n            },\n            {\n                \"line\": \"시작될는지 모르지만 느낌이 어쩐지\",\n                \"time\": 131550\n            },\n            {\n                \"line\": \"진짜 좋을 것 같아 왠지\",\n                \"time\": 135100\n            },\n            {\n                \"line\": \"영화 드라마보다도 더 멋진 (멋진)\",\n                \"time\": 137830\n            },\n            {\n                \"line\": \"사랑이 올 거야 내 예감 언제나 맞지 (Ooh-ooh)\",\n                \"time\": 140620\n            },\n            {\n                \"line\": \"어서 나타나봐 나는 다 준비가 됐지 ready\",\n                \"time\": 143290\n            },\n            {\n                \"line\": \"\",\n                \"time\": 146330\n            },\n            {\n                \"line\": \"어디 있을까?\",\n                \"time\": 146840\n            },\n            {\n                \"line\": \"찾아낼 거야\",\n                \"time\": 148170\n            },\n            {\n                \"line\": \"어디 있을까?\",\n                \"time\": 149380\n            },\n            {\n                \"line\": \"보고 싶어 죽겠어\",\n                \"time\": 151090\n            },\n            {\n                \"line\": \"더 이상 참을 수 없을 것만 같아\",\n                \"time\": 153060\n            },\n            {\n                \"line\": \"\",\n                \"time\": 156990\n            },\n            {\n                \"line\": \"사탕처럼 달콤하다는데\",\n                \"time\": 157500\n            },\n            {\n                \"line\": \"하늘을 나는 것 같다는데\",\n                \"time\": 160040\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 163080\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 164980\n            },\n            {\n                \"line\": \"사랑이 어떤 느낌인지?\",\n                \"time\": 165930\n            },\n            {\n                \"line\": \"하루 종일 웃고 있다는데\",\n                \"time\": 168470\n            },\n            {\n                \"line\": \"세상이 다 아름답다는데\",\n                \"time\": 171710\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 174630\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 176150\n            },\n            {\n                \"line\": \"언젠간 나에게도 사랑이 올까?\",\n                \"time\": 177350\n            },\n            {\n                \"line\": \"\",\n                \"time\": 180460\n            },\n            {\n                \"line\": \"I wanna know, I wanna know\",\n                \"time\": 180840\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 185730\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 187630\n            },\n            {\n                \"line\": \"I wanna know, I wanna know\",\n                \"time\": 188580\n            },\n            {\n                \"line\": \"I wanna know know know know\",\n                \"time\": 197280\n            },\n            {\n                \"line\": \"What is love?\",\n                \"time\": 199110\n            },\n            {\n                \"line\": \"I wanna know\",\n                \"time\": 202600\n            },\n            {\n                \"line\": \"\",\n                \"time\": 203940\n            }\n        ]\n    }\n]","import { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nexport const Navbar = function () {\n  const navigate = useNavigate()\n  return (\n    <div>\n      <nav>\n        <h1>My K Star</h1>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          {\" \"}\n          Home{\" \"}\n        </NavLink>\n        <NavLink to={\"/dashboard\"} className={\"Links\"}>\n          {\" \"}\n          Dashboard{\" \"}\n        </NavLink>\n        <NavLink to={\"/dictionary\"} className={\"Links\"}>\n          {\" \"}\n          Dictionary{\" \"}\n        </NavLink>\n        <NavLink to={\"/learn\"} className={\"Links\"}>\n          {\" \"}\n          Learn{\" \"}\n        </NavLink>\n        <button onClick={function () {\n          localStorage.removeItem(\"user\");\n          navigate(\"/login\")\n        }}>Logout</button>\n      </nav>\n      <hr className=\"navbar-divider\" />\n    </div>\n  );\n};\n","import { Navbar } from \"../components/Navbar/Navbar\";\n\nexport const Dashboard = function () {\n\n  \n  return (\n    <div>\n      <Navbar></Navbar>\n      <main>\n        <h1>Dashboard</h1>\n        <p>\n          Adipisicing cupidatat labore non fugiat labore aute in deserunt magna\n          velit ea eiusmod. Anim cupidatat laborum pariatur incididunt ad ut\n          eiusmod. Ullamco sit fugiat occaecat pariatur eiusmod minim dolore\n          pariatur ea ullamco. Qui eiusmod qui cillum aliqua labore ea. Duis\n          adipisicing tempor cupidatat ut sunt aute consequat do anim in\n          cupidatat.\n        </p>\n      </main>\n    </div>\n  );\n};\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n  \n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const database = getDatabase(app);","import {\n    onValue,\n    push,\n    ref,\n    remove,\n    set,\n} from \"firebase/database\";\nimport React, { useEffect, useState } from \"react\";\nimport { database } from \"../../services/Firebase\";\nimport \"./Bookmark.css\"\n\nexport const Bookmark = () => {\n    const [word, setWord] = useState(\"\");\n    const [words, setWords] = useState([]);\n    const [updateWordId, setupdateWordId] = useState(\"\");\n\n    useEffect(() => {\n        const db_ref = ref(database, \"/words\");\n        onValue(db_ref, (snapshot) => {\n            // console.log(\"snapshot\", snapshot);\n            console.log(\"value\", snapshot.val());\n            //print all values\n            for (let key in snapshot.val()) {\n                console.log(snapshot.val());\n                const data = snapshot.val();\n                console.log(\"value\", snapshot.val()[key]);\n                const wordArray = [];\n                for (let id in data) {\n                    wordArray.push({ id, ...data[id] });\n                }\n                console.log(\"wordArray\", wordArray);\n                setWords(wordArray);\n            }\n        });\n    }, []);\n\n    function addWord(event) {\n        event.preventDefault();\n        const db_ref = ref(database, \"/words\");\n        push(db_ref, {\n            title: word,\n        });\n    }\n\n    function handleDelete(id, e) {\n        const db_ref = ref(database, `/words/${id}`);\n        remove(db_ref);\n    }\n\n    function handleUpdate(id) {\n        setupdateWordId(id);\n    }\n\n    function handleChange(id, newTitle) {\n        const db_ref = ref(database, `/words/${id}`);\n        set(db_ref, {\n            title: newTitle,\n        });\n        setupdateWordId(\"\");\n    }\n    return (\n        <section>\n            <form className=\"bookmark-form\">\n                <input\n                    type=\"text\"\n                    onChange={(event) => {\n                        setWord(event.target.value);\n                    }}\n                    defaultValue={word}\n                />\n                <button onClick={addWord} type=\"submit\">\n                    Bookmark\n                </button>\n                <ul>\n                    {words.map((word) => {\n                        return (\n                            <li key={word.id}>\n                                {word.title}\n                                {updateWordId === word.id ? (\n                                    <div>\n                                        <input\n                                            type={\"text\"}\n                                            defaultValue={\"...\"}\n                                            onChange={function (event) {\n                                                handleChange(word.id, event.target.value);\n                                            }}\n                                        />\n                                        <button\n                                            type={\"submit\"}\n                                            onClick={function (e) {\n                                                e.preventDefault();\n                                                setupdateWordId(\"\");\n                                            }}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <button\n                                            type={\"submit\"}\n                                            onClick={function (e) {\n                                                e.preventDefault();\n                                                handleUpdate(word.id);\n                                            }}\n                                        >\n                                            Edit\n                                        </button>\n\n                                        <button\n                                            onClick={function (e) {\n                                                handleDelete(word.id, e);\n                                            }}\n                                            type=\"submit\"\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                )}\n                            </li>\n                        );\n                    })}\n                </ul>\n            </form>\n        </section>\n    )\n}","import React from \"react\";\nimport { Bookmark } from \"../components/Bookmark/Bookmark\";\nimport { Navbar } from \"../components/Navbar/Navbar\";\n\nexport const Dictionary = function () {\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <header>\n        <blockquote>\n          <h1>\n            My K Star Dictionary\n          </h1>\n          <footer>\n            <h2>\n              Find meanings and save for quick reference\n            </h2>\n          </footer>\n        </blockquote>\n        <Bookmark />\n      </header>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nconst WORDS = [\n    { word: 'abate', meaning: 'to reduce or lessen' },\n    { word: 'abdicate', meaning: 'to give up a position or responsibility' },\n    { word: 'aberration', meaning: 'a departure from what is normal or expected' }\n];\n\nfunction WordQuiz() {\n    const [words, setWords] = useState([]);\n    const [score, setScore] = useState(0);\n    const [currentWord, setCurrentWord] = useState(null);\n    const [options, setOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState('');\n\n    useEffect(() => {\n        setWords(shuffleArray(WORDS));\n        setCurrentWord(0);\n    }, []);\n\n    useEffect(() => {\n        if (currentWord !== null) {\n            generateOptions();\n        }\n    }, [currentWord]);\n\n    function shuffleArray(array) {\n        const shuffledArray = [...array];\n        for (let i = shuffledArray.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n        }\n        return shuffledArray;\n    }\n    function generateOptions() {\n        const currentMeaning = words[currentWord].meaning;\n        const otherMeanings = words\n            .filter((word) => word.meaning !== currentMeaning)\n            .map((word) => word.meaning)\n            .sort(() => Math.random() - 0.5)\n            .slice(0, Math.min(words.length - 1, 3));\n        setOptions(shuffleArray([currentMeaning, ...otherMeanings]));\n    }\n\n\n    function handleOptionSelect(option) {\n        setSelectedOption(option);\n    }\n\n    function handleAnswer() {\n        const currentAnswer = words[currentWord].meaning;\n        if (selectedOption === currentAnswer) {\n            setScore(score + 1);\n        }\n        if (currentWord + 1 === words.length) {\n            alert(`Your score is ${parseInt(100 * (score / words.length))}`)\n        } else {\n            setCurrentWord(currentWord + 1);\n            setSelectedOption('');\n        }\n    }\n\n    if (!words.length) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h1>Word Quiz</h1>\n            <hr />\n            <h2>{words[currentWord].word}</h2>\n            <p>Correct: {score}</p>\n            {options.map((option) => (\n                <div key={option}>\n                    <label>\n                        <input type=\"radio\" name=\"option\" value={option} checked={selectedOption === option} onChange={() => handleOptionSelect(option)} />\n                        {option}\n                    </label>\n                </div>\n            ))}\n            <button onClick={handleAnswer}> Answer </button>\n        </div>\n    )\n}\n\nexport default WordQuiz;","import { Navbar } from \"../components/Navbar/Navbar\";\nimport WordQuiz from \"../components/WordQuiz\";\n\nexport const Home = function () {\n  return (\n    <div>\n      <Navbar />\n      <main>\n        <WordQuiz />\n      </main>\n    </div>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\n\nexport function SongCard({ song }) {\n    const { album_url, artist, title } = { ...song };\n    const navigate = useNavigate();\n    return (\n        <aside>\n            <h3> {title} </h3>\n            <figure>\n                <img src={album_url} />\n                <figcaption>\n                    <i> Artist: {artist} </i>\n                </figcaption>\n            </figure>\n            <button onClick={() => {\n                navigate(\"/lyric-player\", { state: { song } })\n            }}>\n                Sing!\n            </button>\n        </aside>\n    );\n}","import { get, ref, set } from \"firebase/database\";\nimport { database } from \"./Firebase\";\n\nexport const db_create = (path, input) => {\n    const db_ref = ref(database, path);\n    set(db_ref, input)\n}\n\nexport const db_get = (path) => {\n    const db_ref = ref(database, path);\n    const result = get(db_ref).then(snapshot => {\n        return snapshot.val()\n    })\n    return result;\n}","import { useEffect, useState } from \"react\";\nimport { SongCard } from \"../components/Cards/Cards\";\nimport { Navbar } from \"../components/Navbar/Navbar\";\nimport { db_get } from \"../services/Database\";\n\nexport const Learn = () => {\n\n    const [songs, setSongs] = useState([]);\n\n    useEffect(() => {\n        db_get(\"songs\").then(songs => {\n            setSongs(songs)\n        })\n    }, [])\n\n    return (\n        <div>\n            <Navbar></Navbar>\n            <main>\n                <h1> Learn </h1>\n                <section>\n                    {songs.map((song, i) => {\n                        return (<SongCard key={i} song={song} />)\n                    })}\n                </section>\n            </main>\n        </div>\n    )\n}\n\n","import {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../services/Firebase\";\n\nexport function LoginForm() {\n    const [email, setEmail] = useState(\"test@gmail.com\");\n    const [password, setPassword] = useState(\"password\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = (e) => {  //can make it faster by using async await\n        e.preventDefault();\n\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                localStorage.setItem(\"user\", JSON.stringify(user));\n                console.log(\"Signed in as user:\", user);\n                navigate(\"/\");\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.error(`Error signing in: ${errorCode} - ${errorMessage}`);\n                setError(`Error signing in: ${errorCode} - ${errorMessage}`);\n            });\n    };\n\n\n\n    async function handleSignUp(event) {\n        event.preventDefault();\n        console.log(\"handleSingUp\")\n        try {\n            const response = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password\n            );\n            const user_email = response.user.email;\n            console.log(response);\n            console.log(\"signed up with email: \" + user_email);\n        } catch (error) {\n            setError(error.message);\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <form>\n                <label>\n                    Email:\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </label>\n                <br />\n                <button type=\"submit\" onClick={handleLogin}>Login</button>\n                <button type=\"submit\" onClick={handleSignUp}>Sign Up</button>\n            </form>\n            {error && <code>{error}</code>}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { LoginForm } from \"../components/LoginForm/LoginForm\";\n\nexport function Login() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <hr />\n      <LoginForm/>\n    </main>\n  );\n}\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { LyricPlayer } from \"./components/LyricPlayer/LyricPlayer\";\nimport ProtectedRoutes from \"./components/ProtectedRoutes\";\nimport { songs } from \"./data/songs\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { Dictionary } from \"./pages/Dictionary\";\nimport { Home } from \"./pages/Home\";\nimport { Learn } from \"./pages/Learn\";\nimport { Login } from \"./pages/Login\";\nimport { db_create } from \"./services/Database\";\n\nfunction App() {\n  db_create(\"songs\", songs);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={`/${process.env.PUBLIC_URL}`}>\n        <Routes>\n          <Route element={<ProtectedRoutes />}>\n            <Route path=\"/\" element={<Home />}></Route>\n            <Route path=\"/learn\" element={<Learn />}></Route>\n            <Route path=\"/dictionary\" element={<Dictionary />}></Route>\n            <Route path=\"/dashboard\" element={<Dashboard />}></Route>\n            <Route path=\"/lyric-player\" element={<LyricPlayer />}></Route>\n          </Route>\n          <Route\n            path=\"/login\"\n            element={<Login />}\n          ></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <App />\n);\n"],"sourceRoot":""}