{"version":3,"sources":["components/Router/ProtectedRoutes.js","components/Navbar/Navbar.js","utils/Firebase/Firebase.js","utils/Firebase/Users/users.example.js","utils/Firebase/Users/users.firebase.js","utils/Firebase/Bookmark/bookmark.firebase.js","pages/Dictionary/components/Word.js","pages/Dictionary/components/WordList.js","utils/Firebase/Score/score.firebase.js","pages/Dictionary/components/WordQuiz.js","utils/Dictionary/searchDictionary.js","pages/Dictionary/components/Search.js","pages/Dictionary/Dictionary.js","components/Cards/Cards.js","utils/Firebase/Songs/songs.firebase.js","pages/Learn/Learn.js","components/Charts/DonutChart.js","pages/Home/components/Dashboard.js","pages/Home/Home.js","pages/Login/components/LoginForm.js","pages/Login/Login.js","pages/Register/components/RegisterForm.js","pages/Register/Register.js","pages/Scoreboard/Scoreboard.js","components/Buttons/BackButton.js","pages/Learn/LyricPlayer/components/Lyrics.js","pages/Learn/LyricPlayer/components/Player.js","pages/Learn/LyricPlayer/components/Scoreboard.js","pages/Learn/LyricPlayer/LyricPlayer.js","App.js","index.js"],"names":["ProtectedRoutes","user","JSON","parse","localStorage","getItem","_jsx","Outlet","context","Navigate","to","Navbar","navigate","useNavigate","_jsxs","children","NavLink","className","onClick","removeItem","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","auth","getAuth","database","getDatabase","createUser","_ref","email","firstName","lastName","highScore","song","quiz","bookmark","registerUser","_x","_registerUser","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","password","response","db_ref","wrap","_context","prev","next","createUserWithEmailAndPassword","sent","ref","concat","currentUser","uid","set","abrupt","stop","signInUser","_x2","_signInUser","_callee2","_ref2","_context2","signInWithEmailAndPassword","then","userCredential","setItem","stringify","catch","error","getUser","_getUser","_callee3","dbRef","_context3","get","val","updateUser","_x3","_updateUser","_callee4","data","_context4","update","addBookmark","_addBookmark","word","i","getBookmark","t0","length","koreanWord","alert","_toConsumableArray","_getBookmark","Word","onAddWord","koreanDefinition","englishWord","englishDefinition","utterance","SpeechSynthesisUtterance","text","lang","pitch","rate","volume","window","speechSynthesis","speak","WordList","words","onStartQuiz","map","index","setSongScore","_setSongScore","newScore","currentScore","setQuizScore","_setQuizScore","WordQuiz","_useState","useState","_useState2","_slicedToArray","numCorrect","setNumCorrect","_useState3","_useState4","currentWordIndex","setCurrentWordIndex","_useState5","_useState6","options","setOptions","shuffle","array","j","Math","floor","random","_handleClicked","selected","currentAnswer","newCorrect","score","useEffect","currentWord","shuffledOtherWords","filter","_","slice","handleClicked","searchDictionary","_json$channel$item","_json$channel$item$0$","q","json","wordObj","_wordObj$translation","_wordObj$translation2","fetch","parseStringPromise","console","log","channel","item","sense","definition","translation","trans_word","trans_dfn","Search","onSearchWord","setWord","handleClick","event","dictionaryResult","preventDefault","type","onChange","target","value","defaultValue","_ref3","e","Dictionary","currentPage","setCurrentPage","searchedWord","setSearchedWord","addedWords","setAddedWords","gotoNextPage","handleAddWord","t1","Link","FontAwesomeIcon","icon","style","color","RecentWordCard","RecentSongCard","album_url","title","artist","src","alt","SongCard","_song","_objectSpread","state","_downloadSongs","Learn","songs","setSongs","downloadSongs","s","DonutChart","ChartJS","register","ArcElement","Tooltip","Legend","Doughnut","Dashboard","name","setName","recentWords","setRecentWords","onAuthStateChanged","dbUser","labels","datasets","backgroundColor","Home","LoginForm","setEmail","setPassword","setError","handleLogin","errorCode","errorMessage","code","message","Login","RegisterForm","values","setValues","handleChange","_defineProperty","handleSignUp","Register","Scoreboard","scores","setScores","onValue","snapshot","users","Object","highestScores","songScore","quizScore","getHighestScore","sort","a","b","BackButton","Lyrics","lyrics","currentLineIndex","getKoreanDefinition","_json$channel$item$0$2","stopPropagation","generateLyric","sentence","split","koreanWords","match","extractKoreanWords","includes","note","line","Player","music_url","audioRef","handleTimeUpdate","handleAudioEnd","backgroundImage","muted","controls","autoPlay","onTimeUpdate","onEnded","scoreState","_scoreState","setScore","_Fragment","current","currentTime","play","LyricPlayer","_location$state","useLocation","setCurrentLineIndex","contentRef","useRef","scrollToHighlightedLine","highlightedElement","document","querySelector","highlightedHeight","offsetHeight","contentHeight","scrollValue","offsetTop","scrollTop","time","prevIndex","past","randomScore","addEventListener","removeEventListener","library","add","fas","App","BrowserRouter","basename","Routes","Route","element","path","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.97777f3b.chunk.js","sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\";\n\nconst ProtectedRoutes = function () {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return user ? <Outlet context={[user]} /> : <Navigate to={\"/login\"} />;\n};\n\nexport default ProtectedRoutes;\n","import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nexport const Navbar = function () {\n  const navigate = useNavigate()\n  return (\n    <div>\n      <nav>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          <h1>My K Star</h1>\n        </NavLink>\n        <NavLink to={\"/\"} className={\"Links\"}>\n          {\" \"}\n          Home{\" \"}\n        </NavLink>\n        <NavLink to={\"/scoreboard\"} className={\"Links\"}>\n          {\" \"}\n          Scoreboard{\" \"}\n        </NavLink>\n        <NavLink to={\"/dictionary\"} className={\"Links\"}>\n          {\" \"}\n          Dictionary{\" \"}\n        </NavLink>\n        <NavLink to={\"/learn\"} className={\"Links\"}>\n          {\" \"}\n          Learn{\" \"}\n        </NavLink>\n        <button onClick={function () {\n          localStorage.removeItem(\"user\");\n          navigate(\"/login\")\n        }}>Logout</button>\n      </nav>\n      <hr className=\"navbar-divider\" />\n    </div>\n  );\n};\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const database = getDatabase(app);\n","// USER SCHEMA\n// const user = {\n//     email: \"test@gmail.com\",\n//     firstName: \"Test\",\n//     lastName: \"User\",\n//     highScore: {\n//         song: 0,\n//         quiz: 0\n//     },\n//     bookmark: []\n// }\n\nexport const createUser = ({\n    email,\n    firstName,\n    lastName,\n}) => {\n    return {\n        email,\n        firstName,\n        lastName,\n        highScore: {\n            song: 0,\n            quiz: 0\n        },\n        bookmark: []\n    }\n}","\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { get, ref, set, update } from \"firebase/database\";\nimport { auth, database } from \"../Firebase\";\nimport { createUser } from \"./users.example\";\n\nexport async function registerUser({ email, password, firstName, lastName }) {\n    const response = await createUserWithEmailAndPassword(auth, email, password);\n    const db_ref = ref(database, `/users/${auth.currentUser.uid}`);\n    await set(db_ref, createUser({ email, firstName, lastName }))\n    return response;\n}\n\nexport async function signInUser({ email, password }) {\n    await signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            const user = userCredential.user;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return user;\n        })\n        .catch((error) => {\n            throw error;\n        });\n}\n\n// get currently logged in user\nexport async function getUser() {\n    const uid = auth.currentUser.uid\n    const dbRef = ref(database, `/users/${uid}`)\n    return (await get(dbRef)).val()\n}\n\n// update user data with new data\nexport async function updateUser(data) {\n    const uid = auth.currentUser.uid\n    const dbRef = ref(database, `/users/${uid}`)\n    await update(dbRef, data)\n}","import { getUser, updateUser } from \"../Users/users.firebase\";\n\nexport async function addBookmark(word) {\n    const bookmark = await getBookmark() || [];\n    // Check if word is already bookmarked\n    for (let i = 0; i < bookmark.length; i++) {\n        if (bookmark[i].koreanWord === word.koreanWord) {\n            alert(\"Word already bookmarked!\");\n            return;\n        }\n    }\n    // Add word to bookmark\n    await updateUser({\n        bookmark: [...bookmark, word]\n    })\n}\n\nexport async function getBookmark() {\n    // Get user's bookmark\n    const user = await getUser();\n    return user.bookmark;\n}","\nimport React from \"react\";\nimport \"../Dictionary.css\";\nconst Word = ({ word, onAddWord }) => {\n  const { koreanWord, koreanDefinition, englishWord, englishDefinition } = word;\n\n  const speak = () => {\n    const utterance = new SpeechSynthesisUtterance();\n    utterance.text = koreanWord;\n    utterance.lang = 'ko-KR';\n    utterance.pitch = 1;\n    utterance.rate = 0.75;\n    utterance.volume = 1;\n    window.speechSynthesis.speak(utterance);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <button className=\"button\" onClick={speak}> 🔊 </button>\n        <h1 className=\"h1\">{koreanWord}</h1>\n        <button className=\"button\" onClick={async () => await onAddWord(word)}> ⭐️ </button>\n      </div>\n\n      <section>\n        <aside className=\"wordcard\">\n          <h3>{englishWord} </h3>\n          <p>{koreanDefinition}</p>\n          <p>{englishDefinition}</p>\n        </aside>\n      </section>\n    </div>\n  );\n};\n\nexport default Word;\n","import React from \"react\";\nimport \"../Dictionary.css\";\nconst WordList = ({ words, onStartQuiz }) => {\n\n  return (\n    <header>\n      <h1>Bookmark</h1>\n      <section className=\"word-list\">\n        {words.map((word, index) => {\n\n          const { koreanWord, koreanDefinition, englishWord } = word;\n\n          return (\n            <aside className=\"wordcard\" key={index}>\n              <h2> {koreanWord} </h2>\n              <h3> {englishWord} </h3>\n              <p> {koreanDefinition} </p>\n            </aside>\n          )\n        })}\n      </section>\n      <button onClick={onStartQuiz}>Start Quiz</button>\n    </header>\n  );\n};\n\nexport default WordList;\n","// setSongScore(newScore)\n\nimport { getUser, updateUser } from \"../Users/users.firebase\";\n\n// 1. get the currently logged in user info\n// 2. get the user's current highScore for song\n// 3. if newScore > current highScore => update the user's highscore\n\nexport async function setSongScore(newScore) {\n\n    \n    // get the currently logged in user info\n    const user = await getUser();\n    // READ ONLY\n    let currentScore = user.highScore.song;\n\n    if (newScore > currentScore) {\n        // update the highScore on the database\n        await updateUser({\n            highScore: {\n                song: newScore,\n                quiz: user.highScore.quiz\n            }\n        })\n    }\n}\n\n// setQuizScore(newScore)\n\n// 1. get the currently logged in user info\n// 2. get the user's current highScore for quiz\n// 3. if newScore > current highScore => update the user's highscore\n\nexport async function setQuizScore(newScore) {\n    // get the currently logged in user info\n    const user = await getUser();\n    // READ ONLY\n    let currentScore = user.highScore.quiz;\n\n    if (newScore > currentScore) {\n        // update the highScore on the database\n        await updateUser({\n            highScore: {\n                song: user.highScore.song,\n                quiz: newScore\n            }\n        })\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { setQuizScore } from \"../../../utils/Firebase/Score/score.firebase\";\nimport \"../Dictionary.css\";\n\nfunction WordQuiz({ words }) {\n\n    const [numCorrect, setNumCorrect] = useState(0);\n    const [currentWordIndex, setCurrentWordIndex] = useState(0);\n    const [options, setOptions] = useState([])\n\n    useEffect(\n        () => {\n            const currentWord = words[currentWordIndex];\n            const otherWords = words.filter((_, index) => {\n                return index !== currentWordIndex;\n            })\n            const shuffledOtherWords = shuffle(otherWords).slice(0, 3);\n            setOptions(shuffle([...shuffledOtherWords, currentWord]));\n        },\n        [currentWordIndex]\n    )\n\n    function shuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]]\n        }\n        return array;\n    }\n\n    async function handleClicked(selected) {\n        const currentAnswer = words[currentWordIndex].englishWord;\n        let newCorrect = numCorrect;\n        if (selected === currentAnswer) {\n            newCorrect++;\n            setNumCorrect(newCorrect);\n        }\n        if (currentWordIndex === words.length - 1) {\n            const score = newCorrect / words.length * 100;\n            alert(`Your score is : ${score}`);\n            await setQuizScore(score);\n            setNumCorrect(0);\n            setCurrentWordIndex(0);\n        } else {\n            setCurrentWordIndex(currentWordIndex + 1);\n        }\n    }\n\n    return (\n        <header>\n            <h1> {words[currentWordIndex].koreanWord} </h1>\n            <h3> Correct: {numCorrect} </h3>\n            <div className=\"options_container\">\n                {\n                    options.map((word, i) => {\n                        return (\n                            <button className=\"option_button\" key={i} onClick={() => handleClicked(word.englishWord)}>\n                                {word.englishWord}\n                            </button>\n                        )\n                    })\n                }\n            </div>\n        </header>\n    );\n}\n\nexport default WordQuiz;\n","import { parseStringPromise } from \"xml2js\";\n\nexport const searchDictionary = async (word) => {\n    const url = process.env.REACT_APP_DICT_URL;\n    const key = process.env.REACT_APP_DICT_KEY;\n    const q = word;\n    const translated = \"y\";\n    const trans_lang = \"1\";\n    const response = await fetch(`${url}?key=${key}&q=${q}&translated=${translated}&trans_lang=${trans_lang}`);\n    const text = await response.text();\n    const json = await parseStringPromise(text);\n    console.log(\"Dictionary result: \", json);\n    const wordObj = json.channel.item?.[0].sense?.[0];\n    if (!wordObj) {\n        return null;\n    } else {\n        const koreanWord = word;\n        const koreanDefinition = wordObj.definition[0];\n        const englishWord = wordObj.translation?.[0].trans_word[0];\n        const englishDefinition = wordObj.translation?.[0].trans_dfn[0];\n\n        return { koreanWord, koreanDefinition, englishWord, englishDefinition }\n    }\n};","import { useState } from \"react\";\nimport { searchDictionary } from \"../../../utils/Dictionary/searchDictionary\";\n\nconst Search = ({ onSearchWord }) => {\n\n    const [word, setWord] = useState(\"\");\n\n    const handleClick = async (event) => {\n        event.preventDefault();\n        try {\n            const dictionaryResult = await searchDictionary(word);\n            if (dictionaryResult) {\n                onSearchWord(dictionaryResult);\n            } else {\n                alert(\"No word found\");\n            }\n        } catch (error) {\n            alert(\"Incorrect search. Please try again.\");\n        }\n    }\n\n\n    return (\n        <header>\n            <blockquote>\n                <h1>\n                    My K Star Dictionary\n                </h1>\n                <footer>\n                    <h2>\n                        Find meanings and save for quick reference\n                    </h2>\n                </footer>\n            </blockquote>\n            <section>\n                <form className=\"bookmark-form\">\n                    <input\n                        type=\"text\"\n                        onChange={(event) => {\n                            setWord(event.target.value);\n                        }}\n                        defaultValue={word}\n                    />\n                    <button onClick={async (e) => await handleClick(e)} type=\"submit\">\n                        Search\n                    </button>\n                </form>\n            </section>\n        </header>\n    )\n}\n\nexport default Search;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport { addBookmark, getBookmark } from \"../../utils/Firebase/Bookmark/bookmark.firebase\";\nimport Word from \"./components/Word\";\nimport WordList from \"./components/WordList\";\nimport WordQuiz from \"./components/WordQuiz\";\nimport Search from \"./components/Search\";\n\nexport function Dictionary() {\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [searchedWord, setSearchedWord] = useState();\n    const [addedWords, setAddedWords] = useState([]);\n\n    const gotoNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n\n    const gotoPreviousPage = () => {\n        setCurrentPage(currentPage - 1);\n    };\n\n    const handleSearchWord = (word) => {\n        setSearchedWord(word);\n        gotoNextPage();\n    };\n\n    const handleAddWord = async (word) => {\n        // setAddedWords((prevWords) => [...prevWords, word]);\n        await addBookmark(word);\n        setAddedWords(await getBookmark());\n        gotoNextPage();\n    };\n\n    const handleStartQuiz = () => {\n        gotoNextPage();\n    };\n\n    return (\n        <div className=\"App\">\n            <Navbar />\n            {currentPage !== 0 && (\n                <Link onClick={gotoPreviousPage} className=\"Links backButton\">\n                    <FontAwesomeIcon\n                        icon=\"fa-solid fa-arrow-left\"\n                        style={{ color: '#ffffff' }}\n                        className=\"icons\"\n                    />\n                </Link>\n            )}\n            {currentPage === 0 && (\n                <Search onSearchWord={handleSearchWord} />\n            )}\n            {currentPage === 1 && (\n                <Word word={searchedWord} onAddWord={handleAddWord} />\n            )}\n            {currentPage === 2 && (\n                <WordList words={addedWords} onStartQuiz={handleStartQuiz} />\n            )}\n            {currentPage === 3 && (\n                <WordQuiz words={addedWords} />\n            )}\n        </div>\n    );\n}\n\n","import { useNavigate } from 'react-router-dom';\n\nexport const RecentWordCard = ({ koreanWord, englishWord }) => {\n    return (\n        <div className=\"word-card\">\n            <p>{koreanWord}</p>\n            <p>{englishWord}</p>\n        </div>\n    );\n};\n\nexport const RecentSongCard = ({ album_url, title, artist }) => {\n    return (\n        <div className=\"song-card\">\n            <img src={album_url} alt=\"Album Cover\" />\n            <h3>{title}</h3>\n            <p>{artist}</p>\n        </div>\n    );\n};\n\nexport const SongCard = ({ song }) => {\n    const { album_url, artist, title } = { ...song };\n    const navigate = useNavigate();\n    return (\n        <aside>\n            <h3> {title} </h3>\n            <figure>\n                <img src={album_url} alt='album' />\n                <figcaption>\n                    <i> Artist: {artist} </i>\n                </figcaption>\n            </figure>\n            <button onClick={() => {\n                navigate(\"/lyric-player\", { state: { song } })\n            }}>\n                Sing!\n            </button>\n        </aside>\n    );\n}","import { get, ref, set } from \"firebase/database\";\nimport { database } from \"../Firebase\";\nimport { songs } from \"./songs.example\";\n\nexport async function uploadSongs () {\n    const dbRef = ref(database, \"/songs\");\n    set(dbRef, songs)\n}\n\nexport async function downloadSongs () {\n    const dbRef = ref(database, \"/songs\");\n    return (await get(dbRef)).val()\n}","import { useEffect, useState } from \"react\";\nimport { SongCard } from \"../../components/Cards/Cards\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport { downloadSongs } from \"../../utils/Firebase/Songs/songs.firebase\";\n\nexport function Learn () {\n\n    const [songs, setSongs] = useState([]);\n\n    useEffect(() => {\n        downloadSongs().then(s => setSongs(s))\n    }, [])\n\n    return (\n        <div>\n            <Navbar></Navbar>\n            <main>\n                <h1> Learn </h1>\n                <section>\n                    {songs.map((song, i) => {\n                        return (<SongCard key={i} song={song} />)\n                    })}\n                </section>\n            </main>\n        </div>\n    )\n}\n\n","// src/components/DonutChart.js\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n\nconst DonutChart = ({ data }) => {\n    ChartJS.register(ArcElement, Tooltip, Legend);\n\n    return <Doughnut data={data} />;\n};\n\nexport default DonutChart;\n","// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport DonutChart from '../../../components/Charts/DonutChart';\n\nimport { Link } from 'react-router-dom';\nimport { RecentSongCard, RecentWordCard } from '../../../components/Cards/Cards';\nimport \"./Dashboard.css\";\nimport { auth } from '../../../utils/Firebase/Firebase';\nimport { getUser } from '../../../utils/Firebase/Users/users.firebase';\n\nconst Dashboard = () => {\n\n    const [name, setName] = useState(\"\")\n    const [recentWords, setRecentWords] = useState([])\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                const dbUser = await getUser();\n                const bookmark = dbUser.bookmark || [];\n                setRecentWords(bookmark.length > 3 ? bookmark.slice(-3) : bookmark);\n                setName(dbUser.firstName);\n            }\n        })\n    }, [])\n\n    const donutChartData = {\n        labels: ['Completed', 'Remaining'],\n        datasets: [\n            {\n                data: [75, 25],\n                backgroundColor: ['#36A2EB', '#FFCE56'],\n            },\n        ],\n    };\n\n    const songs = [\n        // album_url, artist, title\n        { album_url: 'https://lh3.googleusercontent.com/vYnAGmLOhdCYC3qj7VYkEXAsY6lu2VE0LGOBhPgSS__GjdgMwu2CZDlDjJd4up21_sCMUxovlzvrnG7i4t_o1-GRxP4nEu-w_e83brKewKL_BFiX=w960-rj-nu-e365', title: 'Song 1', artist: 'Singer 1' },\n        { album_url: 'https://external-preview.redd.it/MY3_HQFLzswJrX8tYEEbBuodnWH67nqf5gDYSZrFh0s.jpg?auto=webp&s=c75ba2d2994db81df63721b8da0af2316dd3df86', title: 'Song 2', artist: 'Singer 2' },\n        { album_url: 'https://media.pitchfork.com/photos/6092f075f85a3980dcfb9b04/1:1/w_3000,h_3000,c_limit/itzy_guess_who_album_artwork.jpg', title: 'Song 3', artist: 'Singer 3' },\n    ];\n\n    return (\n        <div className=\"dashboard\">\n            <div className=\"name-section\">\n                <h2>Welcome back,</h2>\n                <h1>{name}</h1>\n            </div>\n\n            <h2>Weekly goal</h2>\n            <div className=\"chart-section\">\n                <DonutChart data={donutChartData} />\n            </div>\n\n            <section className=\"content-section\">\n                <div className=\"recent-songs\">\n                    <h2>\n                        Recent Songs\n                        <Link to={\"/learn\"}>View All</Link>\n                    </h2>\n                    {songs.map((song, index) => (\n                        <RecentSongCard key={index} {...song} />\n                    ))}\n                </div>\n                <div className=\"recent-words\">\n                    <h2>\n                        Recent Words\n                        <Link to={\"/dictionary\"}>View All</Link>\n                    </h2>\n                    {recentWords.map((word, index) => (\n                        <RecentWordCard key={index} {...word} />\n                    ))}\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport Dashboard from \"./components/Dashboard\";\n\nexport function Home() {\n  return (\n    <div>\n      <Navbar />\n      <main>\n        <Dashboard />\n      </main>\n    </div>\n  );\n};","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signInUser } from \"../../../utils/Firebase/Users/users.firebase\";\n\n\nexport function LoginForm() {\n    const [email, setEmail] = useState(\"test@gmail.com\");\n    const [password, setPassword] = useState(\"password\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (!email || !password) {\n            setError(\"Please enter email and password.\");\n            return;\n        }\n        try {\n            await signInUser({ email, password })\n            navigate(\"/\")\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.error(`Error: ${errorCode} - ${errorMessage}`);\n            setError(`Error: ${errorCode} - ${errorMessage}`);\n        }\n    };\n\n    const redirectToRegister = (e) => {\n        e.preventDefault();\n        navigate(\"/register\");\n    }\n\n    return (\n        <div>\n            <form>\n                <label>\n                    Email:\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </label>\n                <br />\n                <button type=\"submit\" onClick={handleLogin}>Login</button>\n                <button type=\"register\" onClick={redirectToRegister}>Sign Up / Register</button>\n            </form>\n            {error && <code>{error}</code>}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { LoginForm } from \"./components/LoginForm\";\n\nexport function Login() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <hr />\n      <LoginForm />\n    </main>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../../../utils/Firebase/Users/users.firebase\";\n\nexport function RegisterForm() {\n  const [values, setValues] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = (e) => setValues({ ...values, [e.target.name]: e.target.value });\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    try {\n      await registerUser(values);\n      alert(\"Registration successful. Please login.\")\n      navigate(\"/login\")\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const backToLogin = () => navigate(\"/login\");\n\n  return (\n    <div>\n      <form>\n        <label>\n          First Name:\n          <input type=\"text\" name=\"firstName\" value={values.firstName} onChange={handleChange} />\n        </label>\n        <label>\n          Last Name:\n          <input type=\"text\" name=\"lastName\" value={values.lastName} onChange={handleChange} />\n        </label>\n        <br />\n        <label>\n          Email:\n          <input type=\"email\" name=\"email\" value={values.email} onChange={handleChange} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" name=\"password\" value={values.password} onChange={handleChange} />\n        </label>\n        <br />\n        <button type=\"submit\" onClick={handleSignUp}>Sign Up</button>\n        <button type=\"button\" onClick={backToLogin}>Back to Login</button>\n      </form>\n      {error && <code>{error}</code>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { RegisterForm } from \"./components/RegisterForm\";\n\nexport function Register() {\n  return (\n    <main>\n      <h1>Welcome! </h1>\n      <h2>Are you a new user? You can register you're self bellow!</h2>\n      <hr />\n      <RegisterForm />\n    </main>\n  );\n}","\nimport { useEffect, useState } from \"react\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport { onValue, ref } from \"firebase/database\";\nimport { database } from \"../../utils/Firebase/Firebase\";\n\n\nexport function Scoreboard() {\n\n  const [scores, setScores] = useState([]);\n\n  function getHighestScore(user) {\n    const songScore = user.highScore.song;\n    const quizScore = user.highScore.quiz;\n\n    if (songScore > quizScore) {\n      // do something when songScore > quizScore\n      return {\n        name: `${user.firstName} ${user.lastName}`,\n        type: \"song\",\n        score: songScore\n      }\n    } else {\n      // do something when quizScore > songScore\n      return {\n        name: `${user.firstName} ${user.lastName}`,\n        type: \"quiz\",\n        score: quizScore\n      }\n    }\n  }\n\n  useEffect(() => {\n    onValue(ref(database, \"/users\"), (snapshot) => {\n      const users = Object.values(snapshot.val());\n      if (users) {\n        // ADD ROWS\n        const highestScores = users\n          .map(user => getHighestScore(user))\n          .sort((a, b) => b.score - a.score)\n          .slice(0, 10)\n        setScores(highestScores);\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Navbar />\n      <main>\n        <h1> Scoreboard </h1>\n        <table>\n          <thead>\n            <tr>\n              <th> Ranking </th>\n              <th> Name </th>\n              <th> Type </th>\n              <th> Score </th>\n            </tr>\n          </thead>\n          <tbody>\n            {scores.map((score, index) => {\n              return (\n                <tr key={index}>\n                  <td> {index + 1} </td>\n                  <td> {score.name} </td>\n                  <td> {score.type} </td>\n                  <td> {score.score} </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </main>\n    </div>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const BackButton = ({to, onClick}) => {\n  return (\n    <div>\n      <Link to={to} onClick={onClick} className=\"Links backButton\">\n        <FontAwesomeIcon\n          icon=\"fa-solid fa-arrow-left\"\n          style={{ color: '#ffffff' }}\n          className=\"icons\"\n        />\n      </Link>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react';\nimport { parseStringPromise } from 'xml2js';\n\nexport const Lyrics = ({ lyrics, currentLineIndex }) => {\n\n    const getKoreanDefinition = async (event, word) => {\n        event.stopPropagation();\n        const url = process.env.REACT_APP_DICT_URL;\n        const key = process.env.REACT_APP_DICT_KEY;\n        const q = word;\n        const translated = \"y\";\n        const trans_lang = \"1\";\n        const response = await fetch(`${url}?key=${key}&q=${q}&translated=${translated}&trans_lang=${trans_lang}`);\n        const text = await response.text();\n        const json = await parseStringPromise(text);\n        const definition = json.channel.item?.[0].sense?.[0].translation?.[0].trans_dfn;\n        definition ? alert(`Definition: ${definition}`) : alert(\"No definition found\");\n    };\n\n    const extractKoreanWords = (sentence) => sentence.match(/[\\uAC00-\\uD7AF]+/g);\n\n    const generateLyric = (sentence) => {\n        if (sentence === \"\") {\n            return '•';\n        } else {\n            const words = sentence.split(/\\s+/);\n            const koreanWords = extractKoreanWords(sentence);\n            const lyrics = words.map((word, i) => {\n                if (koreanWords?.includes(word)) {\n                    return <a key={i} onClick={(event) => getKoreanDefinition(event, word)}> {` ${word} `} &nbsp;</a>;\n                } else {\n                    return ` ${word} `;\n                }\n            });\n            return lyrics;\n        }\n    };\n    return (\n        <div className=\"lyrics\">\n            {lyrics.map((item, index) => (\n                <div\n                    key={index}\n                    className={currentLineIndex === index ? 'highlighted' : ''}\n                    note={item.note}\n                >\n                    {generateLyric(item.line)}\n                </div>\n            ))}\n        </div>\n    );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react';\n\nexport const Player = ({\n  music_url,\n  album_url,\n  title,\n  artist,\n  audioRef,\n  handleTimeUpdate,\n  handleAudioEnd\n}) => {\n\n  return (\n    <div className=\"player\">\n      <div className=\"left\" style={{ backgroundImage: `url(${album_url})` }}></div>\n      <div className=\"right\">\n        <div className=\"top\">\n          <a className=\"song\">{title}</a>\n          <a className=\"artist\">{artist}</a>\n        </div>\n        <div className=\"bottom\">\n          <audio\n            ref={audioRef}\n            muted={true}\n            controls={true}\n            autoPlay={true}\n            name={'media'}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n          >\n            <source src={music_url} type=\"audio/mpeg\"></source>\n          </audio>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Scoreboard = ({ scoreState, audioRef }) => {\n  const navigate = useNavigate();\n  \n  const [score, setScore] = scoreState;\n\n  return score && (\n    <div className=\"score\">\n      <>\n        <h1 className=\"scoreDisplay\"> Your score: <br /> 🎤 {score} 🎤</h1>\n        <div className=\"scoreBoardNavBtn\">\n          <button onClick={() => navigate(\"/scoreboard\")}>Scoreboard</button>\n          {/* TODO for Minjun */}\n          <button onClick={() => {\n            setScore(null);\n            audioRef.current.controls = true;\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n          }\n          }>Practice Again</button>\n          <button onClick={() => navigate(\"/learn\")}>Other songs</button>\n        </div>\n      </>\n    </div>\n  )\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport \"./LyricPlayer.css\";\nimport { BackButton } from '../../../components/Buttons/BackButton';\nimport { Lyrics } from './components/Lyrics';\nimport { Player } from './components/Player';\nimport { Scoreboard } from './components/Scoreboard';\nimport { setSongScore } from '../../../utils/Firebase/Score/score.firebase';\n\nexport const LyricPlayer = () => {\n    const location = useLocation();\n    const song = location.state?.song;\n    const { music_url, album_url, artist, title, lyrics } = song || {};\n\n    const [currentLineIndex, setCurrentLineIndex] = useState(0);\n\n    const scoreState = useState(null);\n    const setScore = scoreState[1];\n\n    const contentRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const scrollToHighlightedLine = () => {\n        const highlightedElement = document.querySelector('.highlighted');\n        if (highlightedElement && contentRef.current) {\n            const highlightedHeight = highlightedElement.offsetHeight;\n            const contentHeight = contentRef.current.offsetHeight;\n            const highlightedTop = highlightedElement.offsetTop;\n            const scrollValue = highlightedTop - (contentHeight - highlightedHeight) / 2;\n            contentRef.current.scrollTop = scrollValue;\n        }\n    };\n\n    const handleTimeUpdate = async () => {\n        const time = audioRef.current.currentTime * 1000;\n        setCurrentLineIndex(prevIndex => {\n            const past = lyrics.filter((item) => item.time < time);\n            if (past.length !== prevIndex) {\n                scrollToHighlightedLine();\n            }\n            return past.length - 1;\n        });\n        // \n    };\n\n\n    const handleAudioEnd = async () => {\n        const randomScore = Math.floor(Math.random() * 100);\n        await setSongScore(randomScore);\n        setScore(randomScore);\n        audioRef.current.controls = false;\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('resize', scrollToHighlightedLine);\n        return () => {\n            window.removeEventListener('resize', scrollToHighlightedLine);\n        };\n    }, []);\n\n    return (\n        <div className=\"pbody\">\n            <BackButton to={\"/learn\"} />\n            <div className=\"content\" ref={contentRef}>\n                <Lyrics\n                    lyrics={lyrics}\n                    currentLineIndex={currentLineIndex}\n                />\n            </div>\n            <Player\n                music_url={music_url}\n                album_url={album_url}\n                title={title}\n                artist={artist}\n                audioRef={audioRef}\n                handleTimeUpdate={handleTimeUpdate}\n                handleAudioEnd={handleAudioEnd}\n            />\n            <Scoreboard\n                scoreState={scoreState}\n                audioRef={audioRef}\n            />\n        </div>\n    );\n};\n\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\n\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport ProtectedRoutes from './components/Router/ProtectedRoutes';\nimport { Dictionary } from './pages/Dictionary/Dictionary';\nimport { Learn } from './pages/Learn/Learn';\nimport { Home } from './pages/Home/Home';\nimport { Login } from './pages/Login/Login';\nimport { Register } from './pages/Register/Register';\nimport { Scoreboard } from './pages/Scoreboard/Scoreboard';\nimport { LyricPlayer } from './pages/Learn/LyricPlayer/LyricPlayer';\n\nlibrary.add(fas)\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={`/${process.env.PUBLIC_URL}`}>\n        <Routes>\n          <Route element={<ProtectedRoutes />}>\n            <Route path='/' element={<Home />} ></Route>\n            <Route path='/learn' element={<Learn />} ></Route>\n            <Route path='/dictionary' element={<Dictionary />} ></Route>\n            <Route path='/scoreboard' element={<Scoreboard />} ></Route>\n            <Route path=\"/lyric-player\" element={<LyricPlayer />}></Route>\n          </Route>\n          <Route path=\"/register\" element={<Register />}></Route>\n          <Route path=\"/login\" element={<Login />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <App />\n);\n"],"sourceRoot":""}